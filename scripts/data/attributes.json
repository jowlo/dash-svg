{
    "attributes": {
        "accentHeight": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The accent-height attribute defines the distance from the origin to the top of accent characters, measured by a distance within the font coordinate system.You can use this attribute with the following SVG elements:For <font-face>, accent-height defines the distance from the origin to the top of accent characters, measured by a distance within the font coordinate system.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/accent-height",
            "elements": []
        },
        "accumulate": {
            "description": "The accumulate attribute controls whether or not an animation is cumulative.It is frequently useful for repeated animations to build upon the previous results, accumulating with each iteration. This attribute said to the animation if the value is added to the previous animated attribute's value on each iteration.You can use this attribute with the following SVG elements:Specifies that each repeat iteration after the first builds upon the last value of the previous iteration.Specifies that repeat iterations are not cumulative.This attribute is ignored if the target attribute value does not support addition, or if the animation element does not repeat.This attribute will be ignored if the animation function is specified with only the to attribute.",
            "isRequired": false,
            "type": "\"none\"|\"sum\"",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/accumulate",
            "elements": [
                "animate"
            ]
        },
        "additive": {
            "description": "The additive attribute controls whether or not an animation is additive.It is frequently useful to define animation as an offset or delta to an attribute's value, rather than as absolute values.You can use this attribute with the following SVG elements:Specifies that the animation will add to the underlying value of the attribute and other lower priority animations.Specifies that the animation will override the underlying value of the attribute and other lower priority animations. This is the default, however the behavior is also affected by the animation value attributes by and to, as described in SMIL Animation: How from, to and by attributes affect additive behavior.",
            "isRequired": false,
            "type": "\"replace\"|\"sum\"",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/additive",
            "elements": [
                "animate"
            ]
        },
        "alignmentBaseline": {
            "description": "The alignment-baseline attribute specifies how an object is aligned with respect to its parent. This property specifies which baseline of this element is to be aligned with the corresponding baseline of the parent. For example, this allows alphabetic baselines in Roman text to stay aligned across font size changes. It defaults to the baseline with the same name as the computed value of the alignment-baseline property.Note: As a presentation attribute alignment-baseline can be used as a CSS property.You can use this attribute with the following SVG elements:The value is the dominant-baseline of the script to which the character belongs - i.e., use the dominant-baseline of the parent.Uses the dominant baseline choice of the parent. Matches the box’s corresponding baseline to that of its parent.The alignment-point of the object being aligned is aligned with the \"before-edge\" baseline of the parent text content element.Matches the bottom of the box to the top of the parent’s content area.The alignment-point of the object being aligned is aligned with the \"text-before-edge\" baseline of the parent text content element.Note: This keyword may be mapped to text-top.Aligns the vertical midpoint of the box with the baseline of the parent box plus half the x-height of the parent.Matches the box’s central baseline to the central baseline of its parent.The alignment-point of the object being aligned is aligned with the \"after-edge\" baseline of the parent text content element.Matches the top of the box to the top of the parent’s content area.The alignment-point of the object being aligned is aligned with the \"text-after-edge\" baseline of the parent text content element.Note: This keyword may be mapped to text-bottom.Matches the box’s ideographic character face under-side baseline to that of its parent.Matches the box’s alphabetic baseline to that of its parent.The alignment-point of the object being aligned is aligned with the \"hanging\" baseline of the parent text content element.Matches the box’s mathematical baseline to that of its parent.Aligns the top of the aligned subtree with the top of the line box.Aligns the center of the aligned subtree with the center of the line box.Aligns the bottom of the aligned subtree with the bottom of the line box.SVG 2 introduces some changes to the definition of this property. In particular: the values auto, before-edge, and after-edge have been removed. For backwards compatibility, text-before-edge may be mapped to text-top and text-after-edge to text-bottom. Neither text-before-edge nor text-after-edge should be used with the vertical-align property.For object alignment in other elements (such as <text>), see dominant-baseline.BCD tables only load in the browser",
            "optional": true,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/alignment-baseline",
            "elements": [
                "tspan",
                "textPath"
            ]
        },
        "alphabetic": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The alphabetic attribute defines the lower baseline of a font. It has the same syntax and semantics as the baseline descriptor within an @font-face.For horizontally oriented glyph layouts, it indicates the alignment coordinate for glyphs to achieve alphabetic baseline alignment. The value is an offset in the font coordinate system.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/alphabetic",
            "elements": []
        },
        "amplitude": {
            "description": "The amplitude attribute controls the amplitude of the gamma function of a component transfer element when its type attribute is gamma.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/amplitude",
            "elements": [
                "feFuncA",
                "feFuncB",
                "feFuncG",
                "feFuncR"
            ]
        },
        "arabicForm": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The arabic-form attribute indicates which of the four possible forms an Arabic glyph represents.You can use this attribute with the following SVG elements:This value indicates that the glyph represents the initial form.This value indicates that the glyph represents the medial form.This value indicates that the glyph represents the terminal form.This value indicates that the glyph represents the isolated form.BCD tables only load in the browser",
            "isRequired": false,
            "type": "\"initial\"|\"isolated\"|\"medial\"|\"terminal\"",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/arabic-form",
            "elements": []
        },
        "ascent": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The ascent attribute defines the maximum unaccented height of the font within the font coordinate system.If the attribute is not specified, the effect is as if the attribute were set to the difference between the units-per-em value and the vert-origin-y value for the corresponding font.You can use this attribute with the following SVG elements:For <font-face>, ascent defines the maximum unaccented height of the font within the font coordinate system.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ascent",
            "elements": []
        },
        "attributeName": {
            "description": "The attributeName attribute indicates the name of the CSS property or attribute of the target element that is going to be changed during an animation.You can use this attribute with the following SVG elements:This value indicates the name of the CSS property or attribute of the target element to be animated.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/attributeName",
            "elements": [
                "animate"
            ]
        },
        "attributeType": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The attributeType attribute specifies the namespace in which the target attribute and its associated values are defined.You can use this attribute with the following SVG elements:This value specifies that the value of attributeName is the name of a CSS property defined as animatable.This value specifies that the value of attributeName is the name of an XML attribute defined as animatable in the default XML namespace for the target element.This value specifies that the implementation should match the attributeName to an attribute for the target element. User agents first search through the list of CSS properties for a matching property name, and if none is found, search the default XML namespace for the element.",
            "isRequired": false,
            "type": "string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/attributeType",
            "elements": [
                "animate"
            ]
        },
        "azimuth": {
            "description": "The azimuth attribute specifies the direction angle for the light source on the XY plane (clockwise), in degrees from the x axis.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/azimuth",
            "elements": [
                "feDistantLight"
            ]
        },
        "baseFrequency": {
            "description": "The baseFrequency attribute represents the base frequency parameter for the noise function of the <feTurbulence> filter primitive.You can use this attribute with the following SVG elements:If two numbers are provided, the first one represents the base frequency in the horizontal direction and the second one the base frequency in the vertical direction. If one number is provided, then that value is used for both x and y.Negative values are forbidden.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/baseFrequency",
            "elements": [
                "feTurbulence"
            ]
        },
        "baselineShift": {
            "description": "The baseline-shift attribute allows repositioning of the dominant-baseline relative to the dominant-baseline of the parent text content element. The shifted object might be a sub- or superscript.Note: As a presentation attribute baseline-shift can be used as a CSS property.Note: This property is going to be deprecated and authors are advised to use vertical-align instead.You can use this attribute with the following SVG elements:The dominant-baseline is shifted to the default position for subscripts.The dominant-baseline is shifted to the default position for superscripts.A length value raises (positive value) or lowers (negative value) the dominant-baseline of the parent text content element by the specified length.A percentage value raises (positive value) or lowers (negative value) the dominant-baseline of the parent text content element by the specified percentage of the line-height.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/baseline-shift",
            "elements": [
                "textPath",
                "tspan"
            ]
        },
        "baseProfile": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The baseProfile attribute describes the minimum SVG language profile that the author believes is necessary to correctly render the content. The attribute does not specify any processing restrictions; It can be considered metadata.For example, the value of the attribute could be used by an authoring tool to warn the user when they are modifying the document beyond the scope of the specified base profile.Each SVG profile should define the text that is appropriate for this attribute.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/baseProfile",
            "elements": [
                "svg"
            ]
        },
        "bbox": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The bbox attribute defines the maximal bounding box of a font.You can use this attribute with the following SVG elements:A comma-separated list of exactly four numbers specifying, in order, the lower left x, lower left y, upper right x, and upper right y of the bounding box for the complete font.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/bbox",
            "elements": []
        },
        "begin": {
            "description": "The begin attribute defines when an animation should begin or when an element should be discarded.The attribute value is a semicolon separated list of values. The interpretation of a list of start times is detailed in the SMIL specification in \"Evaluation of begin and end time lists\". Each individual value can be one of the following : <offset-value>, <syncbase-value>, <event-value>, <repeat-value>, <accessKey-value>, <wallclock-sync-value> or the keyword indefinite.You can use this attribute with the following SVG elements:For <animate>, <animateColor>, <animateMotion>, <animateTransform>, and <set>, begin defines when the element should begin, i.e. become active.The <begin-value-list> is a semicolon-separated list of values. Each value can be one of the following:This value defines a clock-value that represents a point in time relative to the beginning of the SVG document (usually the load or DOMContentLoaded event). Negative values are valid.This value defines a syncbase and an optional offset from that syncbase. The element's animation start time is defined relative to the begin or active end of another animation.A valid syncbase-value consists of an ID reference to another animation element followed by a dot and either begin or end to identify whether to synchronize with the beginning or active end of the referenced animation element. An optional offset value as defined in <offset-value> can be appended.This value defines an event and an optional offset that determines the time at which the element's animation should begin. The animation start time is defined relative to the time that the specified event is fired.A valid event-value consists of an element ID followed by a dot and one of the supported events for that element. All valid events (not necessarily supported by all elements) are defined by the DOM and HTML specifications. Those are: focus, blur, focusin, focusout, activate, auxclick, click, dblclick, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, wheel, beforeinput, input, keydown, keyup, compositionstart, compositionupdate, compositionend, load, unload, abort, error, select, resize, scroll, beginEvent, endEvent, and repeatEvent. An optional offset value as defined in <offset-value> can be appended.This value defines a qualified repeat event. The element animation start time is defined relative to the time that the repeat event is raised with the specified iteration value.A valid repeat value consists of an element ID followed by a dot and the function repeat() with an integer value specifying the number of repetitions as parameter. An optional offset value as defined in <offset-value> can be appended.This value defines an access key that should trigger the animation. The element animation will begin when the user presses the specified key.A valid accessKey-value consists of the function accessKey() with the character to be input as parameter. An optional offset value as defined in <offset-value> can be appended.This value defines the animation start time as a real-world clock time.A valid wallclock-sync-value consists of the function wallclock() with a time value as parameter. The time syntax is based upon the syntax defined in ISO 8601.The begin of the animation will be determined by a beginElement() method call or a hyperlink targeted to the element.For <discard>, begin defines when the target element will be discarded.The <discard> element has an implicit simple duration of indefinite. As soon as the element's active duration starts, the element identified by the href attribute is discarded. The behavior is the same as if Node.removeChild() were called on the parent of the target element with the target element as parameter.After removal of the target element, the <discard> element is no longer useful, therefore it is also discarded after the target element's removal. If the href attribute has an invalid URL reference (e.g. the target element did not exist), the <discard> element itself is still removed after the activation.Seeking backwards in the timeline doesn't re-insert the discarded elements. So, authors are encouraged to set the playbackorder attribute to forwardonly when using the <discard> element.The <discard> element itself can be discarded prior to its activation, in which case it will never trigger the removal of its own target element.The definition of <begin-value-list> is the same as for the other animation elements.begin-1-offset.svgbegin-2-syncbase.svgbegin-3-event.svgbegin-4-repeat.svgThis example is embed in an iFrame. If you want to activate the key events, you have to click on it first.begin-5-accesskey.svg",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/begin",
            "elements": [
                "animate"
            ]
        },
        "bias": {
            "description": "The bias attribute shifts the range of the filter. After applying the kernelMatrix of the <feConvolveMatrix> element to the input image to yield a number and applied the divisor attribute, the bias attribute is added to each component. This allows representation of values that would otherwise be clamped to 0 or 1.You can use this attribute with the following SVG elements:One application of bias is when it is desirable to have 0.5 gray value be the zero response of the filter.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/bias",
            "elements": [
                "feConvolveMatrix"
            ]
        },
        "by": {
            "description": "The by attribute specifies a relative offset value for an attribute that will be modified during an animation.The starting value for the attribute is either indicated by specifying it as value for the attribute given in the attributeName or the from attribute.You can use this attribute with the following SVG elements:The exact value type for this attribute depends on the value of the attribute that will be animated.When a list of values is defined via the values attribute, the by attribute is ignored.No compatibility data found for svg.elements.animate.by.Check for problems with this page or contribute missing data to mdn/browser-compat-data.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/by",
            "elements": [
                "animate"
            ]
        },
        "calcMode": {
            "description": "The calcMode attribute specifies the interpolation mode for the animation.The default mode is linear, however if the attribute does not support linear interpolation (e.g. for strings), the calcMode attribute is ignored and discrete interpolation is used.You can use this attribute with the following SVG elements:This specifies that the animation function will jump from one value to the next without any interpolation.Simple linear interpolation between values is used to calculate the animation function. Except for <animateMotion>, this is the default value.Defines interpolation to produce an even pace of change across the animation. This is only supported for values that define a linear numeric range, and for which some notion of \"distance\" between points can be calculated (e.g. position, width, height, etc.). If paced is specified, any keyTimes or keySplines will be ignored. For <animateMotion>, this is the default value.Interpolates from one value in the values list to the next according to a time function defined by a cubic Bézier spline. The points of the spline are defined in the keyTimes attribute, and the control points for each interval are defined in the keySplines attribute.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/calcMode",
            "elements": [
                "animate"
            ]
        },
        "capHeight": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The cap-height attribute defines the height of uppercase glyphs of the font within the font coordinate system.Note: It was specified to share the syntax and semantics of the obsolete cap-height descriptor of the @font-face at-rule defined in an early version of CSS 2.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cap-height",
            "elements": []
        },
        "clip": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The clip attribute is a presentation attribute defining the visible region of an element.This attribute has the same parameter values as defined for the css clip property. Unitless values, which indicate current user coordinates, are permitted on the coordinate values on the rect(). The value of auto defines a clipping path along the bounds of the viewport created by the given element.You can use this attribute with the following SVG elements:Warning: This property is deprecated. Use clip-path instead.The value auto defines a clipping path along the bounds of the viewport created by the given element.The value rect() defines a clipping rectangle following the following syntax: rect(<top>, <right>, <bottom>, <left>). The <top> and <bottom> values specify offsets from the top border edge of the element viewport, while <right> and <left> specify offsets from the left border edge of the element viewport.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/clip",
            "elements": [
                "svg",
                "symbol",
                "image",
                "foreignObject",
                "pattern",
                "marker"
            ]
        },
        "clipPathUnits": {
            "description": "The clipPathUnits attribute indicates which coordinate system to use for the contents of the <clipPath> element.You can use this attribute with the following SVG elements:For <clipPath>, clipPathUnits define the coordinate system in use for the content of the element.This value indicates that all coordinates inside the <clipPath> element refer to the user coordinate system as defined when the clipping path was created.This value indicates that all coordinates inside the <clipPath> element are relative to the bounding box of the element the clipping path is applied to. It means that the origin of the coordinate system is the top left corner of the object bounding box and the width and height of the object bounding box are considered to have a length of 1 unit value.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/clipPathUnits",
            "elements": [
                "clipPath"
            ]
        },
        "clipPath": {
            "description": "The clip-path presentation attribute defines or associates a clipping path with the element it is related to.Note: As a presentation attribute clip-path can be used as a CSS property.You can use this attribute with the following SVG elements:An extra information to tell how a <basic-shape> is applied to an element: fill-box indicates to use the object bounding box; stroke-box indicates to use the object bounding box extended with the stroke; view-box indicates to use the nearest SVG viewport as the reference box.Note: For more details on the clip-path syntax, see the CSS property clip-path reference page.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/clip-path",
            "elements": [
                "circle",
                "clipPath",
                "ellipse",
                "g",
                "image",
                "line",
                "marker",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "rect",
                "svg",
                "symbol",
                "text",
                "use"
            ]
        },
        "clipRule": {
            "description": "« SVG Attribute reference homeThe clip-rule attribute only applies to graphics elements that are contained within a <clipPath> element. The clip-rule attribute basically works as the fill-rule attribute, except that it applies to <clipPath> definitions.The following fragment of code will cause an evenodd clipping rule to be applied to the clipping path because clip-rule is specified on the <path> element that defines the clipping shape:whereas the following fragment of code will not cause an evenodd clipping rule to be applied because the clip-rule is specified on the referencing element, not on the object defining the clipping shape:As a presentation attribute, it also can be used as a property directly inside a CSS stylesheetSee description of fill-rule property.See description of fill-rule property.The following elements can use the clip-rule attribute, but only if they are inside a <clipPath> element.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/clip-rule",
            "elements": []
        },
        "colorInterpolation": {
            "description": "The color-interpolation attribute specifies the color space for gradient interpolations, color animations, and alpha compositing.Note: For filter effects, the color-interpolation-filters property controls which color space is used.The color-interpolation property chooses between color operations occurring in the sRGB color space or in a (light energy linear) linearized RGB color space. Having chosen the appropriate color space, component-wise linear interpolation is used.When a child element is blended into a background, the value of the color-interpolation property on the child determines the type of blending, not the value of the color-interpolation on the parent. For gradients which make use of the href or the deprecated xlink:href attribute to reference another gradient, the gradient uses the property's value from the gradient element which is directly referenced by the fill or stroke property. When animating colors, color interpolation is performed according to the value of the color-interpolation property on the element being animated.Note: As a presentation attribute, color-interpolation can be used as a CSS property.You can use this attribute with the following SVG elements:Indicates that the user agent can choose either the sRGB or linearRGB spaces for color interpolation. This option indicates that the author doesn't require that color interpolation occur in a particular color space.Indicates that color interpolation should occur in the sRGB color space.Indicates that color interpolation should occur in the linearized RGB color space as described in the sRGB specification.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/color-interpolation",
            "elements": [
                "animate",
                "circle",
                "clipPath",
                "defs",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "linearGradient",
                "marker",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "radialGradient",
                "rect",
                "svg",
                "switch",
                "symbol",
                "text",
                "textPath",
                "tspan",
                "use"
            ]
        },
        "colorInterpolationFilters": {
            "description": "The color-interpolation-filters attribute specifies the color space for imaging operations performed via filter effects.Note: This property just has an affect on filter operations. Therefore, it has no effect on filter primitives like <feOffset>, <feImage>, <feTile> or <feFlood>.color-interpolation-filters has a different initial value than color-interpolation. color-interpolation-filters has an initial value of linearRGB, whereas color-interpolation has an initial value of sRGB. Thus, in the default case, filter effects operations occur in the linearRGB color space, whereas all other color interpolations occur by default in the sRGB color space.It has no affect on filter functions, which operate in the sRGB color space.Note: As a presentation attribute, color-interpolation-filters can be used as a CSS property.You can use this attribute with the following SVG elements:Indicates that the user agent can choose either the sRGB or linearRGB spaces for color interpolation. This option indicates that the author doesn't require that color interpolation occur in a particular color space.Indicates that color interpolation should occur in the sRGB color space.Indicates that color interpolation should occur in the linearized RGB color space as described in the sRGB specification.BCD tables only load in the browser",
            "isRequired": false,
            "type": "\"auto\"|\"inherit\"|\"linearRGB\"|\"sRGB\"",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/color-interpolation-filters",
            "elements": [
                "feSpotLight",
                "feBlend",
                "feColorMatrix",
                "feComponentTransfer",
                "feComposite",
                "feConvolveMatrix",
                "feDiffuseLighting",
                "feDisplacementMap",
                "feDropShadow",
                "feFlood",
                "feGaussianBlur",
                "feImage",
                "feMerge",
                "feMorphology",
                "feOffset",
                "feSpecularLighting",
                "feTile",
                "feTurbulence"
            ]
        },
        "colorProfile": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The color-profile attribute is used to define which color profile a raster image included through the <image> element should use.Note: As a presentation attribute, color-profile can be used as a CSS property.You can use this attribute with the following SVG elements:All colors are presumed to be defined in the sRGB color space unless a more precise embedded profile is specified within content data. For images that do have a profile built into their data, that profile is used. For images that do not have a profile, the sRGB profile is used.The source profile is assumed to be sRGB. This differs from auto in that it overrides an embedded profile inside an image.A name corresponding to a defined color profile that is in the browser's color profile description database. The browser searches the color profile description database for a color profile description entry whose name descriptor matches <name> and uses the last matching entry that is found. If a match is found, the corresponding profile overrides an embedded profile inside an image. If no match is found, then the embedded profile inside the image is used.An IRI reference to the source color profile. The referenced color profile overrides an embedded profile inside the image.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/color-profile",
            "elements": [
                "image"
            ]
        },
        "colorRendering": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The color-rendering attribute provides a hint to the SVG user agent about how to optimize its color interpolation and compositing operations.color-rendering takes precedence over color-interpolation-filters. For example, assume color-rendering: optimizeSpeed and color-interpolation-filters: linearRGB. In this case, the SVG user agent should perform color operations in a way that optimizes performance, which might mean sacrificing the color interpolation precision as specified by through the linearRGB value for color-interpolation-filters.Note: As a presentation attribute, color-rendering can be used as a CSS property.You can use this attribute with the following SVG elements:Indicates that the user agent shall make appropriate tradeoffs to balance speed and quality, but quality shall be given more importance than speed.Indicates that the user agent shall emphasize rendering speed over quality. For RGB display devices, this option will sometimes cause the user agent to perform color interpolation and compositing in the device RGB color space.Indicates that the user agent shall emphasize quality over rendering speed.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/color-rendering",
            "elements": [
                "animate",
                "circle",
                "clipPath",
                "defs",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "linearGradient",
                "marker",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "radialGradient",
                "rect",
                "svg",
                "switch",
                "symbol",
                "text",
                "textPath",
                "tspan",
                "use"
            ]
        },
        "contentScriptType": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The contentScriptType attribute specifies the default scripting language for the given document fragment on the <svg> element.This attribute sets the default scripting language used to process the value strings in event attributes. This language must be used for all instances of script that do not specify their own scripting language. The value specifies a media type, per MIME Part Two: Media Types [RFC2046].BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/contentScriptType",
            "elements": []
        },
        "contentStyleType": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The contentStyleType attribute specifies the style sheet language for the given document fragment on the <svg> element.This language is used for all instances of style that do not specify their own styling language, such as the style attribute that is available on many elements. The value specifies a media type, per MIME Part Two: Media Types [RFC2046].Since CSS is the only widely deployed style sheet language for online styling and it's already defined as default value if contentStyleType is omitted, the attribute is not well supported in user agents. If other style sheet languages become more popular they might not use the style attribute, instead it could be easily declared which style language is used in the <style>'s type attribute.The use of contentStyleType is therefore deprecated.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/contentStyleType",
            "elements": []
        },
        "cursor": {
            "description": "« SVG Attribute reference homeThe cursor attribute specifies the mouse cursor displayed when the mouse pointer is over an element.This attribute behaves exactly like the css cursor property except that if the browser supports the <cursor> element, you should be able to use it with the <funciri> notation.As a presentation attribute, it also can be used as a property directly inside a CSS stylesheet, see css cursor for further information.The following elements can use the cursor attributeBCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cursor",
            "elements": []
        },
        "cx": {
            "description": "The cx attribute define the x-axis coordinate of a center point.You can use this attribute with the following SVG elements:For <circle>, cx defines the x-axis coordinate of the center of the shape.Note: Starting with SVG2 cx, is a Geometry Property, meaning this attribute can also be used as CSS property for circles.For <ellipse>, cx defines the x-axis coordinate of the center of the shape.Note: Starting with SVG2 cx, is a Geometry Property, meaning this attribute can also be used as CSS property for ellipses.For <radialGradient>, cx defines the x-axis coordinate of the end circle for the radial gradient.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cx",
            "elements": [
                "circle",
                "ellipse",
                "radialGradient"
            ]
        },
        "cy": {
            "description": "The cy attribute define the y-axis coordinate of a center point.You can use this attribute with the following SVG elements:For <circle>, cy defines the y-axis coordinate of the center of the shape.Note: Starting with SVG2, cy is a Geometry Property meaning this attribute can also be used as a CSS property for circles.For <ellipse>, cy defines the y-axis coordinate of the center of the shape.Note: Starting with SVG2, cy is a Geometry Property meaning this attribute can also be used as a CSS property for ellipses.For <radialGradient>, cy defines the y-axis coordinate of the end circle for the radial gradient.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cy",
            "elements": [
                "circle",
                "ellipse",
                "radialGradient"
            ]
        },
        "d": {
            "description": "The d attribute defines a path to be drawn.A path definition is a list of path commands where each command is composed of a command letter and numbers that represent the command parameters. The commands are detailed below.You can use this attribute with the following SVG elements:For <path>, d is a string containing a series of path commands that define the path to be drawn.Warning: As of SVG2 <glyph> is deprecated and shouldn't be used.For <glyph>, d is a string containing a series of path commands that define the outline shape of the glyph.Note: The point of origin (the coordinate 0,0) is usually the upper left corner of the context. However the <glyph> element has its origin in the bottom left corner of its letterbox.Warning: As of SVG2 <missing-glyph> is deprecated and shouldn't be used.For <missing-glyph>, d is a string containing a series of path commands that define the outline shape of the glyph.Path commands are instructions that define a path to be drawn. Each command is composed of a command letter and numbers that represent the command parameters.SVG defines 6 types of path commands, for a total of 20 commands:Note: Commands are case-sensitive. An upper-case command specifies absolute coordinates, while a lower-case command specifies coordinates relative to the current position.It is always possible to specify a negative value as an argument to a command:MoveTo instructions can be thought of as picking up the drawing instrument, and setting it down somewhere else—in other words, moving the current point (Po; {xo, yo}). There is no line drawn between Po and the new current point (Pn; {xn, yn}).\n          Move the current point to the coordinate\n          x,y. Any subsequent coordinate pair(s) are interpreted as parameter(s)\n          for implicit absolute LineTo (L) command(s) (see below).\n        Formula: Pn = {x, y}\n          Move the current point by shifting the last known position of\n          the path by dx along the x-axis and by\n          dy along the y-axis. Any subsequent coordinate\n          pair(s) are interpreted as parameter(s) for implicit relative LineTo\n          (l) command(s) (see below).\n        \n          Formula: Pn = {xo\n          + dx, yo + dy}\n        LineTo instructions draw a straight line from the current point (Po; {xo, yo}) to the end point (Pn; {xn, yn}), based on the parameters specified. The end point (Pn) then becomes the current point for the next command (Po′).\n          Draw a line from the current point to the\n          end point specified by x,y. Any subsequent coordinate pair(s) are interpreted as parameter(s)\n          for implicit absolute LineTo (L) command(s).\n        \n          Formula: Po′ =\n          Pn = {x, y}\n        \n          Draw a line from the current point to the\n          end point, which is the current point shifted by\n          dx along the x-axis and\n          dy along the y-axis. Any subsequent coordinate\n          pair(s) are interpreted as parameter(s) for implicit relative LineTo\n          (l) command(s) (see below).\n        \n          Formula: Po′ =\n          Pn = {xo +\n          dx, yo + dy}\n        \n          Draw a horizontal line from the current point to the\n          end point, which is specified by the\n          x parameter and the current point's\n          y coordinate. Any subsequent value(s) are interpreted as\n          parameter(s) for implicit absolute horizontal LineTo (H)\n          command(s).\n        \n          Formula: Po′ =\n          Pn = {x, yo}\n        \n          Draw a horizontal line from the current point to the\n          end point, which is specified by the\n          current point shifted by dx along the\n          x-axis and the current point's y coordinate. Any\n          subsequent value(s) are interpreted as parameter(s) for implicit\n          relative horizontal LineTo (h) command(s).\n        \n          Formula: Po′ =\n          Pn = {xo +\n          dx, yo}\n        \n          Draw a vertical line from the current point to the\n          end point, which is specified by the\n          y parameter and the current point's\n          x coordinate. Any subsequent values are interpreted as\n          parameters for implicit absolute vertical LineTo (V)\n          command(s).\n        \n          Formula: Po′ =\n          Pn = {xo, y}\n        \n          Draw a vertical line from the current point to the\n          end point, which is specified by the\n          current point shifted by dy along the\n          y-axis and the current point's x coordinate. Any\n          subsequent value(s) are interpreted as parameter(s) for implicit\n          relative vertical LineTo (v) command(s).\n        \n          Formula: Po′ =\n          Pn = {xo, yo + dy}\n        Cubic Bézier curves are smooth curve definitions using four points:(Po = {xo, yo})(Pn = {xn, yn})\n      (Pcs = {xcs, ycs})\n      (controls curvature near the start of the curve)\n    \n      (Pce = {xce, yce})\n      (controls curvature near the end of the curve)\n    After drawing, the end point (Pn) becomes the current point for the next command (Po′).\n          Draw a cubic Bézier curve from the current point to the\n          end point specified by x,y. The start control point is specified by\n          x1,y1 and the end control point is\n          specified by x2,y2. Any subsequent triplet(s) of coordinate pairs are interpreted as\n          parameter(s) for implicit absolute cubic Bézier curve (C)\n          command(s).\n        \n          Draw a cubic Bézier curve from the current point to the\n          end point, which is the current point shifted by\n          dx along the x-axis and\n          dy along the y-axis. The\n          start control point is the current point (starting\n          point of the curve) shifted by dx1 along the\n          x-axis and dy1 along the y-axis. The\n          end control point is the current point (starting\n          point of the curve) shifted by dx2 along the\n          x-axis and dy2 along the y-axis. Any\n          subsequent triplet(s) of coordinate pairs are interpreted as\n          parameter(s) for implicit relative cubic Bézier curve (c)\n          command(s).\n        Quadratic Bézier curves are smooth curve definitions using three points:Po = {xo, yo}Pn = {xn, yn}\n      Pc = {xc, yc}\n      (controls curvature)\n    After drawing, the end point (Pn) becomes the current point for the next command (Po′).\n          Draw a quadratic Bézier curve from the current point to the\n          end point specified by x,y. The control point is specified by\n          x1,y1. Any subsequent pair(s) of coordinate pairs are interpreted as\n          parameter(s) for implicit absolute quadratic Bézier curve\n          (Q) command(s).\n        \n          Draw a quadratic Bézier curve from the current point to the\n          end point, which is the current point shifted by\n          dx along the x-axis and\n          dy along the y-axis. The\n          control point is the current point (starting point\n          of the curve) shifted by dx1 along the x-axis\n          and dy1 along the y-axis. Any subsequent\n          pair(s) of coordinate pairs are interpreted as parameter(s) for\n          implicit relative quadratic Bézier curve (q) command(s).\n        \n          Draw a smooth quadratic Bézier curve from the\n          current point to the end point specified by\n          x,y. The control point is a reflection of the\n          control point of the previous curve command. If the previous\n          command wasn't a quadratic Bézier curve, the control point is\n          the same as the curve starting point (current point). Any\n          subsequent coordinate pair(s) are interpreted as parameter(s) for\n          implicit absolute smooth quadratic Bézier curve (T)\n          command(s).\n        \n          Draw a smooth quadratic Bézier curve from the\n          current point to the end point, which is the\n          current point shifted by dx along the\n          x-axis and dy along the y-axis. The\n          control point is a reflection of the\n          control point of the previous curve command. If the previous\n          command wasn't a quadratic Bézier curve, the control point is\n          the same as the curve starting point (current point). Any\n          subsequent coordinate pair(s) are interpreted as parameter(s) for\n          implicit relative smooth quadratic Bézier curve (t)\n          command(s).\n        Elliptical arc curves are curves defined as a portion of an ellipse. It is sometimes easier to draw highly regular curves with an elliptical arc than with a Bézier curve.\n          Draw an Arc curve from the current point to the coordinate\n          x,y. The center of the ellipse used to draw the arc is determined\n          automatically based on the other parameters of the command:\n        \n          Draw an Arc curve from the current point to a point for which\n          coordinates are those of the current point shifted by\n          dx along the x-axis and\n          dy along the y-axis. The center of the ellipse\n          used to draw the arc is determined automatically based on the other\n          parameters of the command:\n        ClosePath instructions draw a straight line from the current position to the first point in the path.Note: The appearance of a shape closed with ClosePath may be different to that of one closed by drawing a line to the origin, using one of the other commands, because the line ends are joined together (according to the stroke-linejoin setting), rather than just being placed at the same coordinates.Note: As a presentation attribute d can be used as a CSS property",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d",
            "elements": [
                "path"
            ]
        },
        "descent": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The descent attribute defines the maximum unaccented depth of the font.Note: It was specified to share the syntax and semantics of the obsolete descent descriptor of the @font-face at-rule defined in an early version of CSS 2.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/descent",
            "elements": []
        },
        "diffuseConstant": {
            "description": "The diffuseConstant attribute represents the kd value in the Phong lighting model. In SVG, this can be any non-negative number.It’s used to determine the final RGB value of a given pixel. The brighter the lighting-color, the smaller this number should be.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/diffuseConstant",
            "elements": [
                "feDiffuseLighting"
            ]
        },
        "direction": {
            "description": "The direction attribute specifies the inline-base direction of a <text> or <tspan> element. It defines the start and end points of a line of text as used by the text-anchor and inline-size properties. It also may affect the direction in which characters are positioned if the unicode-bidi property's value is either embed or bidi-override.It applies only to glyphs oriented perpendicular to the inline-base direction, which includes the usual case of horizontally-oriented Latin or Arabic text and the case of narrow-cell Latin or Arabic characters rotated 90 degrees clockwise relative to a top-to-bottom inline-base direction.In many cases, the bidirectional Unicode algorithm produces the desired result automatically, so this attribute doesn't need to be specified in those cases. For other cases, such as when using right-to-left languages, it may be sufficient to add the direction attribute to the outermost <svg> element, and allow that direction to inherit to all text elements:Note: As a presentation attribute, direction can be used as a CSS property. See css direction for further information.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/direction",
            "elements": [
                "textPath",
                "text",
                "tspan"
            ]
        },
        "display": {
            "description": "The display attribute lets you control the rendering of graphical or container elements.A value of display=\"none\" indicates that the given element and its children will not be rendered. Any value other than none or inherit indicates that the given element will be rendered by the browser.When applied to a container element, setting display to none causes the container and all of its children to be invisible; thus, it acts on groups of elements as a group. This means that any child of an element with display=\"none\" will never be rendered even if the child has a value for display other than none.When the display attribute is set to none, then the given element does not become part of the rendering tree. It has implications for the <tspan>, <tref>, and <altGlyph> elements, event processing, for bounding box calculations and for calculation of clipping paths:The display attribute only affects the direct rendering of a given element, whereas it does not prevent elements from being referenced by other elements. For example, setting it to none on a <path> element will prevent that element from getting rendered directly onto the canvas, but the <path> element can still be referenced by a <textPath> element; furthermore, its geometry will be used in text-on-a-path processing even if the <path> has a display value of none.This attribute also affects direct rendering into offscreen canvases, such as occurs with masks or clip paths. Thus, setting display=\"none\" on a child of a <mask> will prevent the given child element from being rendered as part of the mask. Similarly, setting display=\"none\" on a child of a <clipPath> element will prevent the given child element from contributing to the clipping path.Note: As a presentation attribute, display can be used as a CSS property. See css display for further information.You can use this attribute with any SVG element.where <display-outside> = block | inline | run-in<display-inside> = flow | flow-root | table | flex | grid | ruby<display-listitem> = <display-outside>? && [ flow | flow-root ]? && list-item<display-internal> = table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container<display-box> = contents | none<display-legacy> = inline-block | inline-list-item | inline-table | inline-flex | inline-gridFor a description of the values, please refer to the css display property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/display",
            "elements": []
        },
        "divisor": {
            "description": "The divisor attribute specifies the value by which the resulting number of applying the kernelMatrix of a <feConvolveMatrix> element to the input image color value is divided to yield the destination color value.A divisor that is the sum of all the matrix values tends to have an evening effect on the overall color intensity of the result.You can use this attribute with the following SVG elements:This value defines the divisor. If the specified divisor is 0 then the default value will be used instead.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/divisor",
            "elements": [
                "feConvolveMatrix"
            ]
        },
        "dominantBaseline": {
            "description": "The dominant-baseline attribute specifies the dominant baseline, which is the baseline used to align the box’s text and inline-level contents. It also indicates the default alignment baseline of any boxes participating in baseline alignment in the box's alignment context.It is used to determine or re-determine a scaled-baseline-table. A scaled-baseline-table is a compound value with three components:Some values of the property re-determine all three values. Others only re-establish the baseline-table font-size. When the initial value, auto, would give an undesired result, this property can be used to explicitly set the desired scaled-baseline-table.If there is no baseline table in the nominal font, or if the baseline table lacks an entry for the desired baseline, then the browser may use heuristics to determine the position of the desired baseline.Note: As a presentation attribute, dominant-baseline can be used as a CSS property.You can use this attribute with the following SVG elements:If this property occurs on a <text> element, then the computed value depends on the value of the writing-mode attribute.If the writing-mode is horizontal, then the value of the dominant-baseline component is alphabetic. Otherwise, if the writing-mode is vertical, then the value of the dominant-baseline component is central.If this property occurs on a <tspan>, <tref>, <altGlyph>, or <textPath> element, then the dominant-baseline and the baseline-table components remain the same as those of the parent text content element.If the computed baseline-shift value actually shifts the baseline, then the baseline-table font-size component is set to the value of the font-size attribute on the element on which the dominant-baseline attribute occurs, otherwise the baseline-table font-size remains the same as that of the element.If there is no parent text content element, the scaled-baseline-table value is constructed as above for <text> elements.The dominant-baseline and the baseline-table components are set by determining the predominant script of the character data content. The writing-mode, whether horizontal or vertical, is used to select the appropriate set of baseline-tables and the dominant baseline is used to select the baseline-table that corresponds to that baseline. The baseline-table font-size component is set to the value of the font-size attribute on the element on which the dominant-baseline attribute occurs.The dominant-baseline, the baseline-table, and the baseline-table font-size remain the same as that of the parent text content element.The dominant-baseline and the baseline-table remain the same, but the baseline-table font-size is changed to the value of the font-size attribute on this element. This re-scales the baseline-table for the current font-size.The baseline-identifier for the dominant-baseline is set to be ideographic, the derived baseline-table is constructed using the ideographic baseline-table in the font, and the baseline-table font-size is changed to the value of the font-size attribute on this element.The baseline-identifier for the dominant-baseline is set to be alphabetic, the derived baseline-table is constructed using the alphabetic baseline-table in the font, and the baseline-table font-size is changed to the value of the font-size attribute on this element.The baseline-identifier for the dominant-baseline is set to be hanging, the derived baseline-table is constructed using the hanging baseline-table in the font, and the baseline-table font-size is changed to the value of the font-size attribute on this element.The baseline-identifier for the dominant-baseline is set to be mathematical, the derived baseline-table is constructed using the mathematical baseline-table in the font, and the baseline-table font-size is changed to the value of the font-size attribute on this element.The baseline-identifier for the dominant-baseline is set to be central. The derived baseline-table is constructed from the defined baselines in a baseline-table in the font. That font baseline-table is chosen using the following priority order of baseline-table names: ideographic, alphabetic, hanging, mathematical. The baseline-table font-size is changed to the value of the font-size attribute on this element.The baseline-identifier for the dominant-baseline is set to be middle. The derived baseline-table is constructed from the defined baselines in a baseline-table in the font. That font baseline-table is chosen using the following priority order of baseline-table names: alphabetic, ideographic, hanging, mathematical. The baseline-table font-size is changed to the value of the font-size attribute on this element.The baseline-identifier for the dominant-baseline is set to be text-after-edge. The derived baseline-table is constructed from the defined baselines in a baseline-table in the font. The choice of which font baseline-table to use from the baseline-tables in the font is browser dependent. The baseline-table font-size is changed to the value of the font-size attribute on this element.The baseline-identifier for the dominant-baseline is set to be text-before-edge. The derived baseline-table is constructed from the defined baselines in a baseline-table in the font. The choice of which baseline-table to use from the baseline-tables in the font is browser dependent. The baseline-table font-size is changed to the value of the font-size attribute on this element.This value uses the top of the em box as the baseline.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/dominant-baseline",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "dur": {
            "description": "The dur attribute indicates the simple duration of an animation.You can use this attribute with the following SVG elements:This value specifies the length of the simple duration. The value must be greater than 0 and can be expressed with hours (h), minutes (m), seconds (s) or milliseconds (ms). It's possible to combine those time representations to create some complex durations like hh:mm:ss.iii or mm:ss.iii.\n      This value specifies the simple duration as the intrinsic media duration. This is only valid for elements that define media.\n      (For animation elements the attribute will be ignored if media is specified.)\n    This value specifies the simple duration as indefinite.Note: the interpolation will not work if the simple duration is indefinite (although this may still be useful for <set> elements).BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/dur",
            "elements": [
                "animate"
            ]
        },
        "dx": {
            "description": "The dx attribute indicates a shift along the x-axis on the position of an element or its content.You can use this attribute with the following SVG elements:Warning: As of SVG2 <altGlyph> is deprecated and shouldn't be used.For <altGlyph>, if it contains a single value, dx defines a shift along the x-axis for all alternate glyph.If there are multiple values, dx defines a shift along the x-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.For <feDropShadow>, dx defines the x offset of the dropped shadow. The unit used to resolve the value of the attribute is set by the primitiveUnits attribute of the <filter> element.For <feOffset>, dx defines the x offset of the filter input graphic. The unit used to resolve the value of the attribute is set by the primitiveUnits attribute of the <filter> element.Warning: As of SVG2 <glyphRef> is deprecated and shouldn't be used.For <glyphRef>, dx defines the x offset of the glyph, in the font metric system.For <text>, if it contains a single value, dx defines a shift along the x-axis for all glyphs.If there are multiple values, dx defines a shift along the x-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.Warning: As of SVG2 <tref> is deprecated and shouldn't be used.For <tref>, if it contains a single value, dx defines a shift along the x-axis for all glyphs.If there are multiple values, dx defines a shift along the x-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.For <tspan>, if it contains a single value, dx defines a shift along the x-axis for all alternate glyph.If there are multiple values, dx defines a shift along the x-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/dx",
            "elements": [
                "feDropShadow",
                "feOffset",
                "text",
                "tspan"
            ]
        },
        "dy": {
            "description": "The dy attribute indicates a shift along the y-axis on the position of an element or its content.You can use this attribute with the following SVG elements:Warning: As of SVG2 <altGlyph> is deprecated and shouldn't be used.For <altGlyph>, if it contains a single value, dy defines a shift along the y-axis for all alternate glyph.If there are multiple values, dy defines a shift along the y-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.For <feDropShadow>, dy defines the y offset of the dropped shadow. The unit used to resolve the value of the attribute is set by the primitiveUnits attribute of the <filter> element.For <feOffset>, dy defines the y offset of the filter input graphic. The unit used to resolve the value of the attribute is set by the primitiveUnits attribute of the <filter> element.Warning: As of SVG2 <glyphRef> is deprecated and shouldn't be used.For <glyphRef>, dy defines the y offset of the glyph, in the font metric system.For <text>, if it contains a single value, dy defines a shift along the y-axis for all glyphs.If there are multiple values, dy defines a shift along the y-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.Warning: As of SVG2 <tref> is deprecated and shouldn't be used.For <tref>, if it contains a single value, dy defines a shift along the y-axis for all glyphs.If there are multiple values, dy defines a shift along the y-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.For <tspan>, if it contains a single value, dy defines a shift along the y-axis for all alternate glyph.If there are multiple values, dy defines a shift along the y-axis for each individual glyph relative to the preceding glyph. If there are less values than glyphs, the remaining glyphs use a value of 0. If there are more values than glyphs, extra values are ignored.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/dy",
            "elements": [
                "feDropShadow",
                "feOffset",
                "text",
                "tspan"
            ]
        },
        "edgeMode": {
            "description": "The edgeMode attribute determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image.You can use this attribute with the following SVG elements:For <feConvolveMatrix>, edgeMode determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image.This value indicates that the input image is extended along each of its borders as necessary by duplicating the color values at the given edge of the input image.This value indicates that the input image is extended by taking the color values from the opposite edge of the image.This value indicates that the input image is extended with pixel values of zero for R, G, B and A.For <feGaussianBlur>, edgeMode determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image.This value indicates that the input image is extended along each of its borders as necessary by duplicating the color values at the given edge of the input image.This value indicates that the input image is extended by taking the color values from the opposite edge of the image.This value indicates that the input image is extended with pixel values of zero for R, G, B and A.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/edgeMode",
            "elements": [
                "feConvolveMatrix",
                "feGaussianBlur"
            ]
        },
        "elevation": {
            "description": "The elevation attribute specifies the direction angle for the light source from the XY plane towards the Z-axis, in degrees. Note that the positive Z-axis points towards the viewer of the content.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/elevation",
            "elements": [
                "feDistantLight"
            ]
        },
        "enableBackground": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The enable-background attribute specifies how the accumulation of the background image is managed.Note: As a presentation attribute, enable-background can be used as a CSS property.You can use this attribute with the following SVG elements:If an ancestor container element has a property value of enable-background: new, then all graphics elements within the current container element are rendered both onto the parent container element's background image canvas and onto the target device.Otherwise, there is no current background image canvas, so graphics elements are only rendered onto the target device.This value enables the ability of children of the current container element to access the background image.It also indicates that a new (i.e., initially transparent black) background image canvas is established and that in effect all children of the current container element shall be rendered into the new background image canvas in addition to being rendered onto the target device.\n      The optional <x>, <y>, <width>, and <height> parameters are <number> values that indicate the subregion of the container element's user space where access to the background image is allowed to happen. Those values act as a clipping rectangle on the background image canvas.\n      Negative values for <width> or <height> are forbidden. If one, two, or three values are specified or if neither <width> nor <height> are specified, the BackgroundImage and BackgroundAlpha of a filter primitive are processed as if background image processing were not enabled.\n    BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/enable-background",
            "elements": [
                "defs",
                "g",
                "marker",
                "mask",
                "pattern",
                "svg",
                "switch",
                "symbol"
            ]
        },
        "end": {
            "description": "The end attribute defines an end value for the animation that can constrain the active duration.You can use this attribute with the following SVG elements:The <end-value-list> is a semicolon-separated list of values. Each value can be one of the following:This value defines a clock-value that represents a point in time relative to the beginning of the SVG document (usually the load or DOMContentLoaded event). Negative values are valid.This value defines a syncbase and an optional offset from that syncbase. The element's animation end time is defined relative to the begin or active end of another animation.A valid syncbase-value consists of an ID reference to another animation element followed by a dot and either begin or end to identify whether to synchronize with the beginning or active end of the referenced animation element. An optional offset value as defined in <offset-value> can be appended.This value defines an event and an optional offset that determines the time at which the element's animation should end. The animation end time is defined relative to the time that the specified event is fired.A valid event-value consists of an element ID followed by a dot and one of the supported events for that element. All valid events (not necessarily supported by all elements) are defined by the DOM and HTML specifications. Those are: focus, blur, focusin, focusout, activate, auxclick, click, dblclick, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, wheel, beforeinput, input, keydown, keyup, compositionstart, compositionupdate, compositionend, load, unload, abort, error, select, resize, scroll, beginEvent, endEvent, and repeatEvent . An optional offset value as defined in <offset-value> can be appended.This value defines a qualified repeat event. The element animation end time is defined relative to the time that the repeat event is raised with the specified iteration value.A valid repeat value consists of an element ID followed by a dot and the function repeat() with an integer value specifying the number of repetitions as parameter. An optional offset value as defined in <offset-value> can be appended.This value defines an access key that should trigger the end of the animation. The element animation will end when the user presses the specified key.A valid accessKey-value consists of the function accessKey() with the character to be input as parameter. An optional offset value as defined in <offset-value> can be appended.This value defines the animation end time as a real-world clock time.A valid wallclock-sync-value consists of the function wallclock() with a time value as parameter. The time syntax is based upon the syntax defined in ISO 8601.The end of the animation will be determined by an SVGAnimationElement.endElement() method call.This example is embed in an iFrame. If you want to activate the key events, you have to click on it first.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/end",
            "elements": [
                "animate"
            ]
        },
        "exponent": {
            "description": "The exponent attribute defines the exponent of the gamma function.You can use this attribute with the following SVG elements:If the type attribute of the component element is set to gamma, this value specifies the exponent of the gamma function",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/exponent",
            "elements": [
                "feFuncA",
                "feFuncB",
                "feFuncG",
                "feFuncR"
            ]
        },
        "fill": {
            "description": "The fill attribute has two different meanings. For shapes and text it's a presentation attribute that defines the color (or any SVG paint servers like gradients or patterns) used to paint the element; for animation it defines the final state of the animation.You can use this attribute with the following SVG elements:For animation, these elements are using this attribute: <animate>, <animateColor>, <animateMotion>, <animateTransform>, and <set>.Warning: As of SVG2 <altGlyph> is deprecated and shouldn't be used.For <altGlyph>, fill is a presentation attribute that defines the color of the glyph.Note: As a presentation attribute fill can be used as a CSS property.For <animate>, fill defines the final state of the animation.Warning: As of SVG Animation 2 <animateColor> is deprecated and shouldn't be used. Use <animate> instead.For <animateColor>, fill defines the final state of the animation.For <animateMotion>, fill defines the final state of the animation.For <animateTransform>, fill defines the final state of the animation.For <circle>, fill is a presentation attribute that defines the color of the circle.Note: As a presentation attribute fill can be used as a CSS property.For <ellipse>, fill is a presentation attribute that defines the color of the ellipse.Note: As a presentation attribute fill can be used as a CSS property.For <path>, fill is a presentation attribute that defines the color of the interior of the shape. (Interior is define by the fill-rule attribute)Note: As a presentation attribute fill can be used as a CSS property.For <polygon>, fill is a presentation attribute that defines the color of the interior of the shape. (Interior is define by the fill-rule attribute)Note: As a presentation attribute fill can be used as a CSS property.For <polyline>, fill is a presentation attribute that defines the color of the interior of the shape. (Interior is define by the fill-rule attribute)Note: As a presentation attribute fill can be used as a CSS property.For <rect>, fill is a presentation attribute that defines the color of the rectangle.Note: As a presentation attribute fill can be used as a CSS property.For <set>, fill defines the final state of the animation.For <text>, fill is a presentation attribute that defines what the color of the text.Note: As a presentation attribute fill can be used as a CSS property.For <textPath>, fill is a presentation attribute that defines the color of the text.Note: As a presentation attribute fill can be used as a CSS property.Warning: As of SVG2 <tref> is deprecated and shouldn't be used.For <tref>, fill is a presentation attribute that defines the color of the text.Note: As a presentation attribute fill can be used as a CSS property.For <tspan>, fill is a presentation attribute that defines the color of the text.Note: As a presentation attribute fill can be used as a CSS property.BCD tables only load in the browserNote: For information on using the context-fill (and context-stroke) values from HTML documents, see the documentation for the non-standard -moz-context-properties property.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill",
            "elements": [
                "circle",
                "ellipse",
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fillOpacity": {
            "description": "The fill-opacity attribute is a presentation attribute defining the opacity of the paint server (color, gradient, pattern, etc) applied to a shape.Note: As a presentation attribute fill-opacity can be used as a CSS property.You can use this attribute with the following SVG elements:Note: SVG2 introduces percentage values for fill-opacity, however, it is not widely supported yet (See Browser compatibility below) as a consequence, it is best practices to set opacity with a value in the range [0-1].BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-opacity",
            "elements": [
                "circle",
                "ellipse",
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fillRule": {
            "description": "The fill-rule attribute is a presentation attribute defining the algorithm to use to determine the inside part of a shape.Note: As a presentation attribute, fill-rule can be used as a CSS property.You can use this attribute with the following SVG elements:The fill-rule attribute provides two options for how the inside (that is, the area to be filled) of a shape is determined:The value nonzero determines the \"insideness\" of a point in the shape by drawing a ray from that point to infinity in any direction, and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a path segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is zero then the point is outside the path. Otherwise, it is inside.The value evenodd determines the \"insideness\" of a point in the shape by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside.BCD tables only load in the browser",
            "isRequired": false,
            "type": "\"evenodd\"|\"inherit\"|\"nonzero\"",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule",
            "elements": [
                "path",
                "polygon",
                "polyline",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "filter": {
            "description": "The filter attribute specifies the filter effects defined by the <filter> element that shall be applied to its element.Note: As a presentation attribute, filter can be used as a CSS property. See css filter for further information.As a presentation attribute, it can be applied to any element but it only has effect on container elements without the <defs> element, all graphics elements and the <use> element.For a description of the values see the css filter property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/filter",
            "elements": []
        },
        "filterRes": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The filterRes attribute indicates the width and height of the intermediate images in pixels of a filter primitive.Take care when assigning a non-default value to this attribute. Too small of a value may result in unwanted pixelation in the result. Too large of a value may result in slow processing and large memory usage.Note that negative values or zero values disable the rendering of the element which referenced the filter.You can use this attribute with the following SVG elements:This value takes one or two values, the first one outlining the resolution in horizontal direction, the second one in vertical direction. If only one value is specified, it is used for both directions.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/filterRes",
            "elements": [
                "filter"
            ]
        },
        "filterUnits": {
            "description": "The filterUnits attribute defines the coordinate system for the attributes x, y, width and height.You can use this attribute with the following SVG elements:x, y, width and height represent values in the current coordinate system that results from taking the current user coordinate system in place at the time when the <filter> element is referenced (i.e., the user coordinate system for the element referencing the <filter> element via a filter attribute).In that case, x, y, width and height represent fractions or percentages of the bounding box on the referencing element.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/filterUnits",
            "elements": [
                "filter"
            ]
        },
        "floodColor": {
            "description": "The flood-color attribute indicates what color to use to flood the current filter primitive subregion.Note: As a presentation attribute, flood-color can be used as a CSS property.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/flood-color",
            "elements": [
                "feFlood",
                "feDropShadow"
            ]
        },
        "floodOpacity": {
            "description": "The flood-opacity attribute indicates the opacity value to use across the current filter primitive subregion.Note: As a presentation attribute, flood-opacity can be used as a CSS property.You can use this attribute with the following SVG elements:\n      A number or percentage indicating the opacity value to use across the current filter primitive subregion.\n      A number of 0 or a percentage of 0% represents a fully transparent color,  1 or 100% represents a fully opaque color.\n    BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/flood-opacity",
            "elements": [
                "feFlood",
                "feDropShadow"
            ]
        },
        "fontFamily": {
            "description": "The font-family attribute indicates which font family will be used to render the text, specified as a prioritized list of font family names and/or generic family names.Note: As a presentation attribute, font-family can be used as a CSS property. See the css font-family property for more information.You can use this attribute with the following SVG elements:where <family-name> = <string> | <custom-ident>+<generic-family> = serif | sans-serif | cursive | fantasy | monospaceFor a description of the values, please refer to the CSS font-family property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-family",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fontSize": {
            "description": "The font-size attribute refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment.Note: As a presentation attribute, font-size can be used as a CSS property. See the css font-size property for more information.You can use this attribute with the following SVG elements:For a description of the values, please refer to the CSS font-size property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-size",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fontSizeAdjust": {
            "description": "The font-size-adjust attribute allows authors to specify an aspect value for an element that will preserve the x-height of the first choice font in a substitute font.Note: As a presentation attribute, font-size-adjust can be used as a CSS property. See the css font-size-adjust property for more information.You can use this attribute with the following SVG elements:Choose the size of the font based only on the font-size property.Choose the size of the font so that its lowercase letters (as determined by the x-height of the font) are the specified number times the font-size.The number specified should generally be the aspect ratio (ratio of x-height to font size) of the first choice font-family. This means that the first-choice font, when available, will appear the same size in browsers, whether or not they support font-size-adjust.0 yields text of zero height (hidden text).BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-size-adjust",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fontStretch": {
            "description": "The font-stretch attribute indicates the desired amount of condensing or expansion in the glyphs used to render the text.Note: As a presentation attribute, font-stretch can be used as a CSS property. See the css font-stretch property for more information.You can use this attribute with the following SVG elements:where <font-stretch-absolute> = normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-stretch",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fontStyle": {
            "description": "The font-style attribute specifies whether the text is to be rendered using a normal, italic, or oblique face.Note: As a presentation attribute, font-style can be used as a CSS property. See the css font-style property for more information.You can use this attribute with the following SVG elements:For a description of the values, please refer to the CSS font-style property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-style",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fontVariant": {
            "description": "The font-variant attribute indicates whether the text is to be rendered using variations of the font's glyphs.Note: As a presentation attribute, font-variant can be used as a CSS property. See the css font-variant property for more information.You can use this attribute with the following SVG elements:\n          normal | none | [\n          <common-lig-values> ||\n          <discretionary-lig-values> ||\n          <historical-lig-values> ||\n          <contextual-alt-values> ||\n          stylistic( <feature-value-name> ) ||\n          historical-forms ||\n          styleset( <feature-value-name># ) ||\n          character-variant( <feature-value-name># ) ||\n          swash( <feature-value-name> ) ||\n          ornaments( <feature-value-name> ) ||\n          annotation( <feature-value-name> ) || [\n          small-caps | all-small-caps |\n          petite-caps | all-petite-caps |\n          unicase | titling-caps ] ||\n          <numeric-figure-values> ||\n          <numeric-spacing-values> ||\n          <numeric-fraction-values> || ordinal ||\n          slashed-zero ||\n          <east-asian-variant-values> ||\n          <east-asian-width-values> || ruby ]\n        For a description of the values, please refer to the CSS font-variant property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-variant",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "fontWeight": {
            "description": "The font-weight attribute refers to the boldness or lightness of the glyphs used to render the text, relative to other fonts in the same font family.Note: As a presentation attribute, font-weight can be used as a CSS property. See the css font-weight property for more information.You can use this attribute with the following SVG elements:For a description of the values, please refer to the CSS font-weight property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-weight",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "format": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The format attribute indicates the format of the given font.You can use this attribute with the following SVG elements:This value specifies the format of the given font.Here is a list of font formats and their strings that can be used as values for this attribute:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/format",
            "elements": []
        },
        "from": {
            "description": "The from attribute indicates the initial value of the attribute that will be modified during the animation.When used with the to attribute, the animation will change the modified attribute from the from value to the to value. When used with the by attribute, the animation will change the attribute relatively from the from value by the value specified in by.You can use this attribute with the following SVG elements:The exact value type for this attribute depends on the value of the attribute that will be animated.When a list of values is defined via the values attribute, the from attribute is ignored.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/From",
            "elements": [
                "animate"
            ]
        },
        "fx": {
            "description": "The fx attribute defines the x-axis coordinate of the focal point for a radial gradient.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fx",
            "elements": [
                "radialGradient"
            ]
        },
        "fy": {
            "description": "The fy attribute defines the y-axis coordinate of the focal point for a radial gradient.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fy",
            "elements": [
                "radialGradient"
            ]
        },
        "g1": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The g1 attribute specifies a list of glyph names which identify a set of possible first glyphs in the kerning pair.All glyphs with the given glyph name are included in the set. The total set of possible first glyphs in the kerning pair is the union of glyphs specified by the u1 and g1 attributes.You can use this attribute with the following SVG elements:This value indicates a comma-separated sequence of glyph names (i.e., values that match glyph-name attributes on <glyph> elements) which identify a set of possible first glyphs in the kerning pair.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/g1",
            "elements": []
        },
        "g2": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The g2 attribute specifies a list of glyph names which identify a set of possible second glyphs in the kerning pair.All glyphs with the given glyph name are included in the set. The total set of possible second  glyphs in the kerning pair is the union of glyphs specified by the u2 and g2 attributes.You can use this attribute with the following SVG elements:This value indicates a comma-separated sequence of glyph names (i.e., values that match glyph-name attributes on <glyph> elements) which identify a set of possible second glyphs in the kerning pair.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/g2",
            "elements": []
        },
        "glyphName": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The glyph-name attribute specifies the name of a glyph.It is recommended that glyph names be unique within a font. The glyph names can be used in situations where Unicode character numbers do not provide sufficient information to access the correct glyph, such as when there are multiple glyphs per Unicode character.The glyph names can be referenced in kerning definitions created by <hkern> and <vkern> elements.You can use this attribute with the following SVG elements:This value specifies a comma-separated list of names for the glyph.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/glyph-name",
            "elements": []
        },
        "glyphOrientationHorizontal": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The glyph-orientation-horizontal attribute affects the amount that the current text position advances as each glyph is rendered.When the reference orientation direction is horizontal and the glyph-orientation-horizontal results in an orientation angle that is a multiple of 180 degrees, then the current text position is incremented according to the horizontal metrics of the glyph. Otherwise, if the value of this attribute is not a multiple of 180 degrees, then the current text position is incremented according to the vertical metrics of the glyph.This attribute is applied only to text written in a horizontal writing-mode.Note: As a presentation attribute, glyph-orientation-horizontal can be used as a CSS property.You can use this attribute with the following SVG elements:\n      The value of the angle is restricted to 0, 90, 180, and 270 degrees. If another angle is specified, it is rounded to the closest of the permitted values.\n      A value of 0deg indicates that all glyphs are set with the top of the glyphs oriented towards the reference orientation. A value of 90deg indicates an orientation of 90 degrees clockwise from the reference orientation.\n    BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/glyph-orientation-horizontal",
            "elements": [
                "textPath",
                "text",
                "tspan"
            ]
        },
        "glyphOrientationVertical": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The glyph-orientation-vertical attribute affects the amount that hte current text position advances as each glyph is rendered.When the inline-progression-direction is vertical and the glyph-orientation-vertical results in an orientation angle that is a multiple of 180 degrees, then the current text position is incremented according to the vertical metrics of the glyph. Otherwise, if the angle is not a multiple of 180 degrees, then the current text position is incremented according to the horizontal metrics of the glyph.This attribute is applied only to text written in a vertical writing-mode.Note: As a presentation attribute, glyph-orientation-vertical can be used as a CSS property.You can use this attribute with the following SVG elements:Fullwidth ideographic and fullwidth Latin text will be set with a glyph orientation of 0 degrees. Ideographic punctuation and other ideographic characters having alternate horizontal and vertical forms will use the vertical form of the glyph. Text which is not fullwidth will be set with a glyph orientation of 90 degrees.This reorientation rule applies only to the first-level non-ideographic text. All further embedding of writing modes or bidirectional processing will be based on the first-level rotation.Note: Text set in this \"rotated\" manner may contain ligatures or other glyph combining and reordering common to the language and script. (This presentation form does not disable auto-ligature formation or similar context-driven variations.)The determination of which characters should be auto-rotated may vary across user agents. The determination is based on a complex interaction between country, language, script, character properties, font, and character context.\n      The value of the angle is restricted to 0, 90, 180, and 270 degrees. If another angle is specified, it is rounded to the closest of the permitted values.\n      A value of 0deg indicates that all glyphs are set with the top of the glyphs oriented towards the reference orientation. A value of 90deg indicates an orientation of 90 degrees clockwise from the reference orientation.\n    BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/glyph-orientation-vertical",
            "elements": [
                "textPath",
                "text",
                "tspan"
            ]
        },
        "glyphRef": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The glyphRef attribute represents the glyph identifier, the format of which is dependent on the format of the given font.You can use this attribute with the following SVG elements:This value represents the glyph identifier. Its format depends on the format of the given font.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/glyphRef",
            "elements": []
        },
        "gradientTransform": {
            "description": "The gradientTransform attribute contains the definition of an optional additional transformation from the gradient coordinate system onto the target coordinate system (i.e., userSpaceOnUse or objectBoundingBox). This allows for things such as skewing the gradient. This additional transformation matrix is post-multiplied to (i.e., inserted to the right of) any previously defined transformations, including the implicit transformation necessary to convert from object bounding box units to user space.You can use this attribute with the following SVG elements:A list of transformation functions specifying some additional transformation from the gradient coordinate system onto the target coordinate system.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientTransform",
            "elements": [
                "linearGradient",
                "radialGradient"
            ]
        },
        "gradientUnits": {
            "description": "The gradientUnits attribute defines the coordinate system used for attributes specified on the gradient elements.You can use this attribute with the following SVG elements:For <linearGradient>, gradientUnits defines the coordinate system used for the attributes x1, y1, x2, and y2.\n      This value indicates that the attributes represent values in the coordinate system that results from taking the current user coordinate system in place at the time when the gradient element is referenced (i.e., the user coordinate system for the element referencing the gradient element via a fill or stroke property) and then applying the transform specified by attribute gradientTransform.\n      Percentages represent values relative to the current SVG viewport.\n    This value indicates that the user coordinate system for the attributes is established using the bounding box of the element to which the gradient is applied and then applying the transform specified by attribute gradientTransform.Percentages represent values relative to the bounding box for the object.With this value and gradientTransform being the identity matrix, the normal of the linear gradient is perpendicular to the gradient vector in object bounding box space (i.e., the abstract coordinate system where (0,0) is at the top/left of the object bounding box and (1,1) is at the bottom/right of the object bounding box). When the object's bounding box is not square, the gradient normal which is initially perpendicular to the gradient vector within object bounding box space may render non-perpendicular relative to the gradient vector in user space. If the gradient vector is parallel to one of the axes of the bounding box, the gradient normal will remain perpendicular. This transformation is due to application of the non-uniform scaling transformation from bounding box space to user space.For <radialGradient>, gradientUnits defines the coordinate system used for the attributes cx, cy, r, fx, fy, and fr.cx, cy, r, fx, fy, and fr represent values in the coordinate system that results from taking the current user coordinate system in place at the time when the gradient element is referenced (i.e., the user coordinate system for the element referencing the gradient element via a fill or stroke property) and then applying the transform specified by attribute gradientTransform.\n      for <radialGradient>: the user coordinate system for attributes cx, cy, r, fx, fy, and fr is established using the bounding box of the element to which the gradient is applied (see Object bounding box units) and then applying the transform specified by attribute gradientTransform.\n      With this value and gradientTransform being the identity matrix, the rings of the radial gradient are circular with respect to the object bounding box space (i.e., the abstract coordinate system where (0,0) is at the top/left of the object bounding box and (1,1) is at the bottom/right of the object bounding box). When the object's bounding box is not square, the rings that are conceptually circular within object bounding box space will render as elliptical due to application of the non-uniform scaling transformation from bounding box space to user space.\n    ",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientUnits",
            "elements": [
                "linearGradient",
                "radialGradient"
            ]
        },
        "hanging": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The hanging attribute indicates the alignment coordinate for glyphs to achieve hanging baseline alignment for horizontally oriented glyph layouts. The value is an offset in the font coordinate system.You can use this attribute with the following SVG elements:This value indicates the alignment coordinate for the glyphs.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/hanging",
            "elements": []
        },
        "horizAdvX": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The horiz-adv-x attribute indicates the horizontal advance after rendering a glyph in horizontal orientation.You can use this attribute with the following SVG elements:For <font> elements, horiz-adv-x specifies the default horizontal advance of a glyph in horizontal orientation.This value indicates the horizontal advance of the glyph.For <glyph> and <missing-glyph> elements, horiz-adv-x specifies the horizontal advance of the glyph in horizontal orientation.This value indicates the horizontal advance of the glyph.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/horiz-adv-x",
            "elements": []
        },
        "horizOriginX": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The horiz-origin-x attribute indicates the x-coordinate in the font coordinate system of the origin of a glyph to be used when drawing horizontally oriented text.Note: The origin applies to all glyphs in the font.You can use this attribute with the following SVG elements:This value indicates the x-coordinate of the origin of a glyph for horizontally oriented text.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/horiz-origin-x",
            "elements": []
        },
        "ideographic": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The ideographic attribute indicates the alignment coordinate for glyphs to achieve ideographic baseline alignment for horizontally oriented glyph layouts. The value is an offset in the font coordinate system.You can use this attribute with the following SVG elements:This value indicates the alignment coordinate for the glyphs.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ideographic",
            "elements": []
        },
        "imageRendering": {
            "description": "The image-rendering attribute provides a hint to the browser about how to make speed vs. quality tradeoffs as it performs image processing.The resampling is always done in a truecolor (e.g., 24-bit) color space even if the original data and/or the target device is indexed color.Note: As a presentation attribute, image-rendering can be used as a CSS property. See the css image-rendering property for more information.You can use this attribute with the following SVG elements:Indicates that the user agent shall make appropriate tradeoffs to balance speed and quality, but quality shall be given more importance than speed.Indicates that the user agent shall emphasize rendering speed over quality.Indicates that the user agent shall emphasize quality over rendering speed.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/image-rendering",
            "elements": [
                "image"
            ]
        },
        "in": {
            "description": "The in attribute identifies input for the given filter primitive.The value can be either one of the six keywords defined below, or a string which matches a previous result attribute value within the same <filter> element. If no value is provided and this is the first filter primitive, then this filter primitive will use SourceGraphic as its input. If no value is provided and this is a subsequent filter primitive, then this filter primitive will use the result from the previous filter primitive as its input.If the value for result appears multiple times within a given <filter> element, then a reference to that result will use the closest preceding filter primitive with the given value for attribute result.You can use this attribute with the following SVG elements:This keyword represents the graphics elements that were the original input into the <filter> element.This keyword represents the graphics elements that were the original input into the <filter> element. SourceAlpha has all of the same rules as SourceGraphic except that only the alpha channel is used.This keyword represents an image snapshot of the SVG document under the filter region at the time that the <filter> element was invoked.Same as BackgroundImage except only the alpha channel is used.This keyword represents the value of the fill property on the target element for the filter effect. In many cases, the FillPaint is opaque everywhere, but that might not be the case if a shape is painted with a gradient or pattern which itself includes transparent or semi-transparent parts.This keyword represents the value of the stroke property on the target element for the filter effect. In many cases, the StrokePaint is opaque everywhere, but that might not be the case if a shape is painted with a gradient or pattern which itself includes transparent or semi-transparent parts.This value is an assigned name for the filter primitive in the form of a <custom-ident>. If supplied, then graphics that result from processing this filter primitive can be referenced by an in attribute on a subsequent filter primitive within the same filter element. If no value is provided, the output will only be available for re-use as the implicit input into the next filter primitive if that filter primitive provides no value for its in attribute.BackgroundImage is not supported as a filter source in modern browsers (see the feComposite compatibility table). We therefore need to import one of the images to blend inside the filter itself, using an <feImage> element.Note: Firefox Bug 455986 means that feImage cannot load partial images, including circles, rectangles, paths or other fragments defined in the document. So that this example works on more browsers, a full external image of the logo is loaded.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/in",
            "elements": [
                "feBlend",
                "feColorMatrix",
                "feComponentTransfer",
                "feComposite",
                "feConvolveMatrix",
                "feDiffuseLighting",
                "feDisplacementMap",
                "feDropShadow",
                "feGaussianBlur",
                "feMergeNode",
                "feMorphology",
                "feOffset",
                "feSpecularLighting",
                "feTile"
            ]
        },
        "in2": {
            "description": "The in2 attribute identifies the second input for the given filter primitive. It works exactly like the in attribute.You can use this attribute with the following SVG elements:For <feBlend>, in2 defines the second input image to the blending operation.For <feComposite>, in2 defines the second input image to the compositing operation.For <feDisplacementMap>, in2 defines the second input image, which is used to displace the pixels in the image defined in the in attribute.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/in2",
            "elements": [
                "feBlend",
                "feComposite",
                "feDisplacementMap"
            ]
        },
        "intercept": {
            "description": "The intercept attribute defines the intercept of the linear function of color component transfers when the type attribute is set to linear.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/intercept",
            "elements": [
                "feFuncA",
                "feFuncB",
                "feFuncG",
                "feFuncR"
            ]
        },
        "k": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The k attribute specifies the amount for decreasing the spacing between the two glyphs in a kerning pair.The value is in the font coordinate system. This attribute is required.You can use this attribute with the following SVG elements:This value indicates the amount for decreasing the spacing between the two glyphs in the kerning pair.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/k",
            "elements": []
        },
        "k1": {
            "description": "The k1 attribute defines one of the values to be used within the arithmetic operation of the <feComposite> filter primitive.The pixel composition is computed using the following formula:You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/k1",
            "elements": [
                "feComposite"
            ]
        },
        "k2": {
            "description": "The k2 attribute defines one of the values to be used within the arithmetic operation of the <feComposite> filter primitive.The pixel composition is computed using the following formula:You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/k2",
            "elements": [
                "feComposite"
            ]
        },
        "k3": {
            "description": "The k3 attribute defines one of the values to be used within the arithmetic operation of the <feComposite> filter primitive.The pixel composition is computed using the following formula:You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/k3",
            "elements": [
                "feComposite"
            ]
        },
        "k4": {
            "description": "The k4 attribute defines one of the values to be used within the arithmetic operation of the <feComposite> filter primitive.The pixel composition is computed using the following formula:You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/k4",
            "elements": [
                "feComposite"
            ]
        },
        "kernelMatrix": {
            "description": "The kernelMatrix attribute defines the list of numbers that make up the kernel matrix for the <feConvolveMatrix> element.Values are separated by space characters and/or a comma. The number of entries in the list must equal to <orderX> by <orderY> as defined in the order attribute.You can use this attribute with the following SVG elements:The list of <number>s that make up the kernel matrix for the convolution. Values are separated by space characters and/or a comma. The number of entries in the list must equal <orderX> times <orderY>.If the result of orderX * orderY is not equal to the number of entries in the value list, the filter primitive acts as a pass through filter.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/kernelMatrix",
            "elements": [
                "feConvolveMatrix"
            ]
        },
        "kernelUnitLength": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The kernelUnitLength attribute has two meanings based on the context it's used in. For lighting filter primitives, it indicates the intended distance for the x and y coordinates, for <feConvolveMatrix>, it indicates the intended distance between successive columns and rows in the kernel matrix.You can use this attribute with the following SVG elements:For the <feConvolveMatrix>, kernelUnitLength indicates the intended distance in current filter units (i.e., units as determined by the value of primitiveUnits attribute) between successive columns and rows, respectively, in the kernelMatrix. By specifying value(s) for kernelUnitLength, the kernel becomes defined in a scalable, abstract coordinate system. If the attribute is not specified, the default value is one pixel in the offscreen bitmap, which is a pixel-based coordinate system, and thus potentially not scalable.If a negative or zero value is specified the default value will be used instead.The first number is the x value. The second number is the y value. If the x value is not specified, it defaults to the same value as x.For the <feDiffuseLighting>, kernelUnitLength indicates the intended distance in current filter units (i.e., units as determined by the value of attribute primitiveUnits) for the x and y coordinate, respectively, in the surface normal calculation formulas.The first number is the x value. The second number is the y value. If the y value is not specified, it defaults to the same value as x. By specifying value(s) for kernelUnitLength, the kernel becomes defined in a scalable, abstract coordinate system. If the attribute is not specified, the x and y values represent very small deltas relative to a given position, which might be implemented in some cases as one pixel in the intermediate image offscreen bitmap, which is a pixel-based coordinate system, and thus potentially not scalable.If a negative or zero value is specified the default value will be used instead.For the <feSpecularLighting>, kernelUnitLength indicates the intended distance in current filter units (i.e., units as determined by the value of attribute primitiveUnits) for the x and y coordinate, respectively, in the surface normal calculation formulas.The first number is the x value. The second number is the y value. If the y value is not specified, it defaults to the same value as x. By specifying value(s) for kernelUnitLength, the kernel becomes defined in a scalable, abstract coordinate system. If the attribute is not specified, the x and y values represent very small deltas relative to a given position, which might be implemented in some cases as one pixel in the intermediate image offscreen bitmap, which is a pixel-based coordinate system, and thus potentially not scalable.If a negative or zero value is specified the default value will be used instead.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/kernelUnitLength",
            "elements": [
                "feConvolveMatrix",
                "feDiffuseLighting",
                "feSpecularLighting"
            ]
        },
        "kerning": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The kerning attribute indicates whether the spacing between glyphs should be adjusted based on kerning tables that are included in the relevant font (i.e., enable auto-kerning) or instead disable auto-kerning and set the spacing between them to a specific length (typically, zero).Note: As a presentation attribute kerning can be used as a CSS property. In CSS the property is called font-kerning, though.You can use this attribute with the following SVG elements:This value indicates that the spacing between glyphs is adjusted based on kerning tables that are included in the font that will be used.If a length is provided, then auto-kerning is disabled. Instead, inter-character spacing is set to the given length.If a length is provided without a unit identifier (e.g., an unqualified number such as 128), the length is processed as a width value in the current user coordinate system. If a unit identifier (e.g., 0.25em or 1%) is provided, then the length is converted into a corresponding value in the current user coordinate system.The most common scenario, other than auto, is to set kerning to a value of 0 so that auto-kerning is disabled.The given length is added to the inter-character spacing value specified by the letter-spacing attribute.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/kerning",
            "elements": [
                "textPath",
                "text",
                "tspan"
            ]
        },
        "keyPoints": {
            "description": "The keyPoints attribute indicates the simple duration of an animation.You can use this attribute with the following SVG elements:This value defines a semicolon-separated list of floating point values between 0 and 1 and indicates how far along the motion path the object shall move at the moment in time specified by corresponding keyTimes value. The distance is calculated along the path specified by the path attribute. Each progress value in the list corresponds to a value in the keyTimes attribute list.If a list of key points is specified, there must be exactly as many values in the keyPoints list as in the keyTimes list.If there's a semicolon at the end of the value, optionally followed by white space, both the semicolon and the trailing white space are ignored.If there are any errors in the value specification (i.e. bad values, too many or too few values), then that's an error.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/keyPoints",
            "elements": [
                "animate"
            ]
        },
        "keySplines": {
            "description": "The keySplines attribute defines a set of Bézier curve control points associated with the keyTimes list, defining a cubic Bézier function that controls interval pacing.This attribute is ignored unless the calcMode attribute is set to spline.If there are any errors in the keySplines specification (bad values, too many or too few values), the animation will not occur.You can use this attribute with the following SVG elements:The attribute value is a semicolon-separated list of control point descriptions.No compatibility data found for svg.elements.animate.keySplines.Check for problems with this page or contribute missing data to mdn/browser-compat-data.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/keySplines",
            "elements": [
                "animate"
            ]
        },
        "keyTimes": {
            "description": "The keyTimes attribute represents a list of time values used to control the pacing of the animation.Each time in the list corresponds to a value in the values attribute list, and defines when the value is used in the animation. Each time value in the keyTimes list is specified as a floating point value between 0 and 1 (inclusive), representing a proportional offset into the duration of the animation element.You can use this attribute with the following SVG elements:The value of the keyTimes attribute is a semicolon-separated list of values.There must be exactly as many values in the keyTimes list as in the values list.Each successive time value must be greater than or equal to the preceding time value.The keyTimes list semantics depends upon the interpolation mode:If the calcMode attribute is set to paced, the keyTimes attribute is ignored.If the duration of the animation is indefinite, any keyTimes specification will be ignored.No compatibility data found for svg.elements.animate.keyTimes.Check for problems with this page or contribute missing data to mdn/browser-compat-data.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/keyTimes",
            "elements": [
                "animate"
            ]
        },
        "lengthAdjust": {
            "description": "The lengthAdjust attribute controls how the text is stretched into the length defined by the textLength attribute.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/lengthAdjust",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "letterSpacing": {
            "description": "The letter-spacing attribute controls spacing between text characters, in addition to any spacing from the kerning attribute.If the attribute value is a unitless number (like 128), the browser processes it as a <length> in the current user coordinate system.If the attribute value has a unit identifier, such as .25em or 1%, then the browser converts the <length> into its corresponding value in the current user coordinate system.Note: As a presentation attribute, letter-spacing can be used as a CSS property. See the css letter-spacing property for more information.You can use this attribute with the following SVG elements:For a description of the values, please refer to the CSS letter-spacing property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/letter-spacing",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "lightingColor": {
            "description": "The lighting-color attribute defines the color of the light source for lighting filter primitives.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/lighting-color",
            "elements": [
                "feDiffuseLighting",
                "feSpecularLighting"
            ]
        },
        "limitingConeAngle": {
            "description": "The limitingConeAngle attribute represents the angle in degrees between the spot light axis (i.e. the axis between the light source and the point to which it is pointing at) and the spot light cone. So it defines a limiting cone which restricts the region where the light is projected. No light is projected outside the cone.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/limitingConeAngle",
            "elements": [
                "feSpotLight"
            ]
        },
        "markerEnd": {
            "description": "The marker-end attribute defines the arrowhead or polymarker that will be drawn at the final vertex of the given shape.For all shape elements, except <polyline> and <path>, the last vertex is the same as the first vertex. In this case, if the value of marker-start and marker-end are both not none, then two markers will be rendered on that final vertex. For <path> elements, for each closed subpath, the last vertex is the same as the first vertex. marker-end is only rendered on the final vertex of the path data.Note: As a presentation attribute, marker-end can be used as a CSS property.You can use this attribute with the following SVG elements:Indicates that no marker symbol shall be drawn at the final vertex.This value is a reference to a <marker> element, which will be drawn at the final vertex. If the reference is not valid, then no marker will be drawn.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/marker-end",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect"
            ]
        },
        "markerMid": {
            "description": "The marker-mid attribute defines the arrowhead or polymarker that will be drawn at all interior vertices of the given shape.The marker is rendered on every vertex other than the first and last vertices of the path data.Note: As a presentation attribute, marker-mid can be used as a CSS property.You can use this attribute with the following SVG elements:Indicates that no marker symbol shall be drawn at the given vertices.This value is a reference to a <marker> element, which will be drawn at the given vertices. If the reference is not valid, then no marker will be drawn.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/marker-mid",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect"
            ]
        },
        "markerStart": {
            "description": "The marker-start attribute defines the arrowhead or polymarker that will be drawn at the first vertex of the given shape.For all shape elements, except <polyline> and <path>, the last vertex is the same as the first vertex. In this case, if the value of marker-start and marker-end are both not none, then two markers will be rendered on that final vertex. For <path> elements, for each closed subpath, the last vertex is the same as the first vertex. marker-start is only rendered on the first vertex of the path data.Note: As a presentation attribute, marker-start can be used as a CSS property.You can use this attribute with the following SVG elements:Indicates that no marker symbol shall be drawn at the first vertex.This value is a reference to a <marker> element, which will be drawn at the first vertex. If the reference is not valid, then no marker will be drawn.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/marker-start",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect"
            ]
        },
        "markerHeight": {
            "description": "The markerHeight attribute represents the height of the viewport into which the <marker> is to be fitted when it is rendered according to the viewBox and preserveAspectRatio attributes.You can use this attribute with the following SVG elements:\n      This value defines either an absolute or a relative height of the marker.\n      Relative values refer to the height specified via the viewBox and preserveAspectRatio attributes.\n    This value defines the height of the marker in the units defined by the markerUnits attribute.A value of zero disables rendering of the element and negative values are an error.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/markerHeight",
            "elements": [
                "marker"
            ]
        },
        "markerUnits": {
            "description": "The markerUnits attribute defines the coordinate system for the markerWidth and markerHeight attributes and the contents of the <marker>.You can use this attribute with the following SVG elements:This value specifies that the markerWidth and markerHeight attributes and the contents of the <marker> element represent values in the current user coordinate system in place for the graphic object referencing the marker (i.e., the user coordinate system for the element referencing the <marker> element via a marker, marker-start, marker-mid, or marker-end property).This value specifies that the markerWidth and markerHeight attributes and the contents of the <marker> element represent values in a coordinate system which has a single unit equal the size in user units of the current stroke width (see the stroke-width attribute) in place for the graphic object referencing the marker.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/markerUnits",
            "elements": [
                "marker"
            ]
        },
        "markerWidth": {
            "description": "The markerWidth attribute represents the width of the viewport into which the <marker> is to be fitted when it is rendered according to the viewBox and preserveAspectRatio attributes.You can use this attribute with the following SVG elements:\n      This value defines either an absolute or a relative width of the marker.\n      Relative values refer to the width specified via the viewBox and preserveAspectRatio attributes.\n    This value defines the width of the marker in the units defined by the markerUnits attribute.A value of zero disables rendering of the element and negative values are an error.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/markerWidth",
            "elements": [
                "marker"
            ]
        },
        "mask": {
            "description": "The mask attribute is a presentation attribute mainly used to bind a given <mask> element with the element the attribute belongs to.Note: As a presentation attribute mask can be used as a CSS property.You can use this attribute with the following SVG elements:Since SVG2, the mask attribute is defined as a css property and is a shorthand for many other properties: mask-image, mask-mode, mask-repeat, mask-position, mask-clip, mask-origin, mask-size, and mask-composite.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/mask",
            "elements": [
                "circle",
                "clipPath",
                "ellipse",
                "g",
                "image",
                "line",
                "marker",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "rect",
                "svg",
                "symbol",
                "text",
                "use"
            ]
        },
        "maskContentUnits": {
            "description": "The maskContentUnits attribute indicates which coordinate system to use for the contents of the <mask> element.You can use this attribute with the following SVG elements:For <mask>, maskContentUnits defines the coordinate system in use for the content of the element.This value indicates that all coordinates inside the <mask> element refer to the user coordinate system as defined when the mask was created.This value indicates that all coordinates inside the <mask> element are relative to the bounding box of the element the mask is applied to. A bounding box could be considered the same as if the content of the <mask> were bound to a \"0 0 1 1\" viewbox.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/maskContentUnits",
            "elements": [
                "mask"
            ]
        },
        "maskUnits": {
            "description": "The maskUnits attribute indicates which coordinate system to use for the geometry properties of the <mask> element.You can use this attribute with the following SVG elements:For <mask>, maskUnits defines the coordinate system in use for the geometry attributes (x, y, width and height) of the element.This value indicates that all coordinates for the geometry attributes refer to the user coordinate system as defined when the mask was created.This value indicates that all coordinates for the geometry attributes represent fractions or percentages of the bounding box of the element to which the mask is applied. A bounding box could be considered the same as if the content of the <mask> were bound to a \"0 0 1 1\" viewbox.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/maskUnits",
            "elements": [
                "mask"
            ]
        },
        "mathematical": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The mathematical attribute indicates the alignment coordinate for glyphs to achieve mathematical baseline alignment for horizontally oriented glyph layouts. The value is an offset in the font coordinate system.You can use this attribute with the following SVG elements:This value indicates the alignment coordinate for the glyphs.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/mathematical",
            "elements": []
        },
        "mode": {
            "description": "The mode attribute defines the blending mode on the <feBlend> filter primitive.You can use this attribute with the following SVG elements:For a description of the values, see <blend-mode>.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/mode",
            "elements": [
                "feBlend"
            ]
        },
        "numOctaves": {
            "description": "The numOctaves attribute defines the number of octaves for the noise function of the <feTurbulence> primitive.\n  An octave is a noise function defined by its frequency and amplitude. A turbulence is built by accumulating several octaves with increasing frequencies and decreasing amplitudes.\n  The higher the number of octaves, the more natural the noise looks. Though more octaves also require more calculations, resulting in a negative impact on performance.\nYou can use this attribute with the following SVG elements:Defines the number of octaves. Negative values are forbidden.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/numOctaves",
            "elements": [
                "feTurbulence"
            ]
        },
        "opacity": {
            "description": "The opacity attribute specifies the transparency of an object or of a group of objects, that is, the degree to which the background behind the element is overlaid.Note: As a presentation attribute, opacity can be used as a CSS property. See the css opacity property for more information.You can use this attribute with the following SVG elements:The uniform opacity setting to be applied across an entire object, as a <number>. Any values outside the range 0.0 (fully transparent) to 1.0 (fully opaque) will be clamped to this range.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/opacity",
            "elements": [
                "circle",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "marker",
                "path",
                "polygon",
                "polyline",
                "rect",
                "svg",
                "switch",
                "symbol",
                "text",
                "textPath",
                "tspan",
                "use"
            ]
        },
        "operator": {
            "description": "The operator attribute has two meanings based on the context it's used in. Either it defines the compositing or morphing operation to be performed.You can use this attribute with the following SVG elements:For <feComposite>, operator defines the compositing operation that is to be performed.This value indicates that the source graphic defined in the in attribute is placed over the destination graphic defined in the in2 attribute.This value indicates that the parts of the source graphic defined in the in attribute that overlap the destination graphic defined in the in2 attribute, replace the destination graphic.This value indicates that the parts of the source graphic defined in the in attribute that fall outside the destination graphic defined in the in2 attribute, are displayed.This value indicates that the parts of the source graphic defined in the in attribute, which overlap the destination graphic defined in the in2 attribute, replace the destination graphic. The parts of the destination graphic that do not overlap with the source graphic stay untouched.This value indicates that the non-overlapping regions of the source graphic defined in the in attribute and the destination graphic defined in the in2 attribute are combined.This value indicates that the sum of the source graphic defined in the in attribute and the destination graphic defined in the in2 attribute is displayed.This value indicates that the source graphic defined in the in attribute and the destination graphic defined in the in2 attribute are combined using the following formula:result = k1*i1*i2 + k2*i1 + k3*i2 + k4\n      where:\n      i1 and i2 indicate the corresponding pixel channel values of the input image, which map to in and in2 respectively, and k1,k2,k3,and k4 indicate the values of the attributes with the same name.\n    For <feMorphology>, operator defines whether to erode (i.e., thin) or dilate (fatten) the source graphic.This value thins the source graphic defined in the in attribute.This value fattens the source graphic defined in the in attribute.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/operator",
            "elements": [
                "feComposite",
                "feMorphology"
            ]
        },
        "order": {
            "description": "The order attribute indicates the size of the matrix to be used by a <feConvolveMatrix> element.You can use this attribute with the following SVG elements:This value indicates the number of cells in each dimension for the kernel matrix. The values provided must be <integer>s greater than zero. Values that are not integers will be truncated, i.e. rounded to the closest integer value towards zero. The first number, indicates the number of columns in the matrix. The second number, indicates the number of rows in the matrix. If no second number is not provided, it defaults to the first number.It is recommended that only small values (e.g., 3) be used; higher values may result in very high CPU overhead and usually do not produce results that justify the impact on performance.BCD tables only load in the browser",
            "isRequired": false,
            "type": "\"no\"|\"yes\"",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/order",
            "elements": [
                "feConvolveMatrix"
            ]
        },
        "orient": {
            "description": "The orient attribute indicates how a marker is rotated when it is placed at its position on the shape.You can use this attribute with the following SVG elements:This value indicates that the marker is oriented such that its positive x-axis is pointing in a direction relative to the path at the position the marker is placed.If placed by marker-start, the marker is oriented 180° different from the orientation that would be used if auto where specified. For all other markers, auto-start-reverse means the same as auto.Note: This allows a single arrowhead marker to be defined that can be used for both the start and end of a path, i.e. which points outwards from both ends.This value indicates that the marker is oriented such that the specified angle is that measured between the shape's positive x-axis and the marker's positive x-axis.Note: For example, if a value of 45 is given, then the marker's positive x-axis would be pointing down and right in the shape's coordinate system.This value indicates an angle in degrees. The marker is oriented such that the specified angle is that measured between the shape's positive x-axis and the marker's positive x-axis.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/orient",
            "elements": [
                "marker"
            ]
        },
        "orientation": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The orientation attribute indicates that the given glyph is only to be used for a particular text direction, i.e. horizontal or vertical.You can use this attribute with the following SVG elements:This value indicates that the glyph is only used for a horizontal text direction.This value indicates that the glyph is only used for a vertical text direction.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/orientation",
            "elements": []
        },
        "origin": {
            "description": "The origin attribute specifies the origin of motion for an animation. It has no effect in SVG.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/origin",
            "elements": []
        },
        "overflow": {
            "description": "The overflow attribute sets what to do when an element's content is too big to fit in its block formatting context. This feature is not widely implemented yet.This attribute has the same parameter values and meaning as the css overflow property, however, the following additional points apply:Note: Although the initial value for overflow is auto, it is overwritten in the User Agent style sheet for the <svg> element when it is not the root element of a stand-alone document, the <pattern> element, and the <marker> element to be hidden by default.Note: As a presentation attribute, overflow can be used as a CSS property. See the css opacity property for more information.You can use this attribute with the following SVG elements:For a description of the values, please see the css overflow property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/overflow",
            "elements": [
                "foreignObject",
                "image",
                "marker",
                "pattern",
                "symbol",
                "svg",
                "text"
            ]
        },
        "overlinePosition": {
            "description": "The overline-position attribute represents the ideal vertical position of the overline. The overline position is expressed in the font's coordinate system.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/overline-position",
            "elements": []
        },
        "overlineThickness": {
            "description": "The overline-thickness attribute represents the ideal thickness of the overline. The overline thickness is expressed in the font's coordinate system.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/overline-thickness",
            "elements": []
        },
        "panose1": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The panose-1 attribute indicates the Panose-1 number of a font face.Panose-1 is an industry standard TrueType font classification and matching technology. The PANOSE system consists of a set of ten numbers that categorize the key attributes of a Latin typeface, a classification procedure for creating those numbers, and mapper software that determines the closest possible font match given a set of typefaces.You can use this attribute with the following SVG elements:This value specifies a Panose-1 number and consists of ten decimal integers, separated by whitespace. The initial value zero for each PANOSE digit means \"any\", i.e. all fonts will match the Panose number if this value is used.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/panose-1",
            "elements": []
        },
        "paintOrder": {
            "description": "The paint-order attribute specifies the order that the fill, stroke, and markers of a given shape or text element are painted.Note: As a presentation attribute, paint-order can be used as a CSS property.You can use this attribute with the following SVG elements:This value indicates that the fill will be painted first, then the stroke, and finally the markers.The order of these three keywords indicates the order in which the painting happens, from left to right. If any of the three painting components is omitted, they will be painted in their default order after the specified components. For example, using stroke is equivalent to stroke fill markers.The example would be rendered as follows:\n  \nThe stroke under effect could be achieved via the following CSS property:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/paint-order",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "pathLength": {
            "description": "The pathLength attribute lets authors specify a total length for the path, in user units. This value is then used to calibrate the browser's distance calculations with those of the author, by scaling all distance computations using the ratio pathLength/(computed value of path length).This can affect the actual rendered lengths of paths; including text paths, animation paths, and various stroke operations. Basically, all computations that require the length of the path. stroke-dasharray, for example, will assume the start of the path being 0 and the end point the value defined in the pathLength attribute.You can use this attribute with the following SVG elements:For <circle>, pathLength lets authors specify a total length for the circle, in user units.For <ellipse>, pathLength lets authors specify a total length for the ellipse, in user units.For <line>, pathLength lets authors specify a total length for the line, in user units.For <path>, pathLength lets authors specify a total length for the path, in user units.For <polygon>, pathLength lets authors specify a total length for the shape, in user units.For <polyline>, pathLength lets authors specify a total length for the shape, in user units.For <rect>, pathLength lets authors specify a total length for the rectangle, in user units.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect"
            ]
        },
        "patternContentUnits": {
            "description": "The patternContentUnits attribute indicates which coordinate system to use for the contents of the <pattern> element.Note: That this attribute has no effect if attribute viewBox is specified on the <pattern> element.You can use this attribute with the following SVG elements:For <pattern>, patternContentUnits defines the coordinate system in use for the content of the element.This value indicates that all coordinates inside the <pattern> element refer to the user coordinate system as defined when the pattern tile was created.This value indicates that all coordinates inside the <pattern> element are relative to the bounding box of the element the pattern is applied to. A bounding box could be considered the same as if the content of the <pattern> were bound to a \"0 0 1 1\" viewbox for a pattern tile of width and height of 100%.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/patternContentUnits",
            "elements": [
                "pattern"
            ]
        },
        "patternTransform": {
            "description": "The patternTransform attribute defines a list of transform definitions that are applied to a pattern tile.You can use this attribute with the following SVG elements:For <pattern>, patternTransform defines a list of transform definitions that are applied to a pattern tile.Note: As of SVG2, it is also allowed to use the CSS transform property. However, the current state of implementation isn't very good. For backward compatibility reason, it is highly suggested to keep using the patternTransform attribute.To know more about the definition of transform functions, see the transform attribute definition.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/patternTransform",
            "elements": [
                "pattern"
            ]
        },
        "patternUnits": {
            "description": "The patternUnits attribute indicates which coordinate system to use for the geometry properties of the <pattern> element.You can use this attribute with the following SVG elements:For <pattern>, patternUnits defines the coordinate system in use for the geometry properties (x, y, width and height) of the element.This value indicates that all coordinates for the geometry properties refer to the user coordinate system as defined when the pattern was applied.This value indicates that all coordinates for the geometry properties represent fractions or percentages of the bounding box of the element to which the pattern is applied. A bounding box could be considered the same as if the content of the <pattern> were bound to a \"0 0 1 1\" viewbox.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/patternUnits",
            "elements": [
                "pattern"
            ]
        },
        "pointerEvents": {
            "description": "The pointer-events attribute is a presentation attribute that allows defining whether or when an element may be the target of a mouse event.Note: As a presentation attribute pointer-events can be used as a CSS property.You can use this attribute with the following SVG elements:For a detailed explanation of each possible value, have a look at the CSS  pointer-events documentation.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events",
            "elements": [
                "circle",
                "clipPath",
                "defs",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "marker",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "rect",
                "svg",
                "switch",
                "symbol",
                "text",
                "textPath",
                "tspan",
                "use"
            ]
        },
        "points": {
            "description": "The points attribute defines a list of points. Each point is defined by a pair of number representing a X and a Y coordinate in the user coordinate system. If the attribute contains an odd number of coordinates, the last one will be ignored.You can use this attribute with the following SVG elements:For <polyline>, points defines a list of points, each representing a vertex of the line to be drawn. Each point is define by a X and Y coordinate in the user coordinate system.Note: A polyline is an open shape, meaning the last point is not connected to the first point.For <polygon>, points defines a list of points, each representing a vertex of the shape to be drawn. Each point is define by a X and Y coordinate in the user coordinate system.Note: A polygon is a closed shape, meaning the last point is connected to the first point.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/points",
            "elements": [
                "polyline",
                "polygon"
            ]
        },
        "pointsAtX": {
            "description": "The pointsAtX attribute represents the x location in the coordinate system established by attribute primitiveUnits on the <filter> element of the point at which the light source is pointing.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointsAtX",
            "elements": [
                "feSpotLight"
            ]
        },
        "pointsAtY": {
            "description": "The pointsAtY attribute represents the y location in the coordinate system established by attribute primitiveUnits on the <filter> element of the point at which the light source is pointing.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointsAtY",
            "elements": [
                "feSpotLight"
            ]
        },
        "pointsAtZ": {
            "description": "The pointsAtZ attribute represents the y location in the coordinate system established by attribute primitiveUnits on the <filter> element of the point at which the light source is pointing, assuming that, in the initial local coordinate system, the positive z-axis comes out towards the person viewing the content and assuming that one unit along the z-axis equals one unit in x and y.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointsAtZ",
            "elements": [
                "feSpotLight"
            ]
        },
        "preserveAlpha": {
            "description": "the preserveAlpha attribute indicates how a <feConvolveMatrix> element handled alpha transparency.You can use this attribute with the following SVG elements:This value indicates that the convolution will only apply to the color channels. In this case, the filter will temporarily unpremultiply the color component values and apply the kernel.This value indicates that the convolution will apply to all channels, including the alpha channel.BCD tables only load in the browser",
            "isRequired": false,
            "type": "Booleanish",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAlpha",
            "elements": [
                "feConvolveMatrix"
            ]
        },
        "preserveAspectRatio": {
            "description": "The preserveAspectRatio attribute indicates how an element with a viewBox providing a given aspect ratio must fit into a viewport with a different aspect ratio.Because the aspect ratio of an SVG image is defined by the viewBox attribute, if this attribute isn't set, the preserveAspectRatio attribute has no effect (with one exception, the <image> element, as described below).Its value is made of one or two keywords: A required alignment value and an optional \"meet or slice\" reference as described below:The alignment value indicates whether to force uniform scaling and, if so, the alignment method to use in case the aspect ratio of the viewBox doesn't match the aspect ratio of the viewport. The alignment value must be one of the following keywords:The meet or slice reference is optional and, if provided, must be one of the following keywords:You can use this attribute with the following SVG elements:For <feImage>, preserveAspectRatio defines how the referenced image should fit in the rectangle define by the <feImage> element.For <image>, preserveAspectRatio defines how the referenced image should fit in the rectangle define by the <image> element.For <marker>, preserveAspectRatio indicates if a uniform scaling must be performed to fit the element viewport.For <pattern>, preserveAspectRatio indicates if a uniform scaling must be performed to fit the element viewport.For <svg>, preserveAspectRatio indicates if a uniform scaling must be performed to fit the element viewport.For <symbol>, preserveAspectRatio indicates if a uniform scaling must be performed to fit the element viewport.For <view>, preserveAspectRatio indicates if a uniform scaling must be performed to fit the element viewport.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio",
            "elements": [
                "svg",
                "symbol",
                "image",
                "feImage",
                "marker",
                "pattern",
                "view"
            ]
        },
        "primitiveUnits": {
            "description": "The primitiveUnits attribute specifies the coordinate system for the various length values within the filter primitives and for the attributes that define the filter primitive subregion.You can use this attribute with the following SVG elements:This value indicates that any length values within the filter definitions represent values in the current user coordinate system in place at the time when the <filter> element is referenced (i.e., the user coordinate system for the element referencing the <filter> element via a filter attribute).This value indicates that any length values within the filter definitions represent fractions or percentages of the bounding box on the referencing element.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/primitiveUnits",
            "elements": [
                "filter"
            ]
        },
        "r": {
            "description": "The r attribute defines the radius of a circle.You can use this attribute with the following SVG elements:For <circle>, r defines the radius of the circle and therefor its size. With a value lower or equal to zero the circle won't be drawn at all.Note: Starting with SVG2, r is a Geometry Property meaning this attribute can also be used as a CSS property for circles.For <radialGradient>, r defines the radius of the end circle for the radial gradient.The gradient will be drawn such that the 100% gradient stop is mapped to the perimeter of this end circle. A value of lower or equal to zero will cause the area to be painted as a single color using the color and opacity of the last gradient <stop>.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/r",
            "elements": [
                "circle",
                "radialGradient"
            ]
        },
        "radius": {
            "description": "The radius attribute represents the radius (or radii) for the operation on a given <feMorphology> filter primitive.If two numbers are provided, the first number represents the x-radius and the second one the y-radius. If one number is provided, then that value is used for both x and y. The values are in the coordinate system established by the primitiveUnits attribute on the <filter> element.A negative or zero value disables the effect of the given filter primitive (i.e., the result is the filter input image).You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/radius",
            "elements": [
                "feMorphology"
            ]
        },
        "refX": {
            "description": "The refX attribute defines the x coordinate of an element’s reference point.You can use this attribute with the following SVG elements:For <marker>, refX defines the x coordinate of the marker’s reference point, which is to be placed exactly at the marker’s position on the shape.Lengths are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.Percentage values are interpreted as being a percentage of the viewBox width.Numbers are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.The reference point of the marker is placed at the left edge of the shape.The reference point of the marker is placed at the horizontal center of the shape.The reference point of the marker is placed at the right edge of the shape.For <symbol>, refX defines the x coordinate of the symbol, which is defined by the cumulative effect of the x attribute and any transformations on the <symbol> and its host <use> element.Unlike other positioning attributes, refX is interpreted as being in the coordinate system of the symbol contents, after application of the viewBox and preserveAspectRatio attributes. If the attribute is not specified, no horizontal adjustment is made, and the left side of the symbol’s rectangular viewport region (regardless of the viewBox coordinate) is positioned at the x coordinate.Note: For backwards compatibility, the behavior when refX is not specified on a <symbol> element is different from when it is specified with a value of 0, and therefore different from the behavior when an equivalent attribute is not specified on a <marker> element.Lengths are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.Percentage values are interpreted as being a percentage of the viewBox width.Numbers are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.The reference point of the marker is placed at the left edge of the shape.The reference point of the marker is placed at the horizontal center of the shape.The reference point of the marker is placed at the right edge of the shape.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/refX",
            "elements": [
                "marker",
                "symbol"
            ]
        },
        "refY": {
            "description": "The refY attribute defines the y coordinate of an element’s reference point.You can use this attribute with the following SVG elements:For <marker>, refY defines the y coordinate of the marker’s reference point, which is to be placed exactly at the marker’s position on the shape.Lengths are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.Percentage values are interpreted as being a percentage of the viewBox height.Numbers are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.The reference point of the marker is placed at the top edge of the shape.The reference point of the marker is placed at the vertical center of the shape.The reference point of the marker is placed at the bottom edge of the shape.For <symbol>, refY defines the y coordinate of the symbol, which is defined by the cumulative effect of the y attribute and any transformations on the <symbol> and its host <use> element.Unlike other positioning attributes, refY is interpreted as being in the coordinate system of the symbol contents, after application of the viewBox and preserveAspectRatio attributes. If the attribute is not specified, no vertical adjustment is made, and the top side of the symbol’s rectangular viewport region (regardless of the viewBox coordinate) is positioned at the y coordinate.Note: For backwards compatibility, the behavior when refY is not specified on a <symbol> element is different from when it is specified with a value of 0, and therefore different from the behavior when an equivalent attribute is not specified on a <marker> element.Lengths are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.Percentage values are interpreted as being a percentage of the viewBox height.Numbers are interpreted as being in the coordinate system of the marker contents, after application of the viewBox and preserveAspectRatio attributes.The reference point of the marker is placed at the top edge of the shape.The reference point of the marker is placed at the vertical center of the shape.The reference point of the marker is placed at the bottom edge of the shape.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/refY",
            "elements": [
                "marker",
                "symbol"
            ]
        },
        "repeatCount": {
            "description": "The repeatCount attribute indicates the number of times an animation will take place.You can use this attribute with the following SVG elements:This value specifies the number of iterations. It can include partial iterations expressed as fraction values. A fractional value describes a portion of the simple duration. Values must be greater than 0.This value indicates that the animation will be repeated indefinitely (i.e. until the document ends).BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/repeatCount",
            "elements": [
                "animate"
            ]
        },
        "repeatDur": {
            "description": "The repeatDur attribute specifies the total duration for repeating an animation.You can use this attribute with the following SVG elements:This value specifies the duration in presentation time to repeat the animation.This value indicates that the animation will be repeated indefinitely (i.e. until the document ends).No compatibility data found for svg.elements.animate.repeatDur.Check for problems with this page or contribute missing data to mdn/browser-compat-data.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/repeatDur",
            "elements": [
                "animate"
            ]
        },
        "requiredFeatures": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The requiredFeatures attribute takes a list of feature strings, with the individual strings separated by white space. It determines whether or not all of the named features are supported by the browser; if all of them are supported, the attribute evaluates to true end the element is rendered; otherwise, the attribute evaluates to false and the current element and its children are skipped and thus will not be rendered. This provides a way to design SVG that gracefully falls back when features aren't available.If the attribute is not present, then its implicit evaluated value is true. If a null string or empty string value is given to attribute requiredFeatures, the attribute is evaluate to false.requiredFeatures is often used in conjunction with the <switch> element. If requiredFeatures is used in other situations, it represents a simple switch on the given element whether to render the element or not.To detect availability of an SVG feature from script, there is the (also deprecated) DOMImplementation.hasFeature() method.You can use this attribute with the following SVG elements:This is a list of feature strings, separated using white space. Determines whether all of the named features are supported by the browser. See Feature strings below for a list of allowed values.The following are the feature strings for the requiredFeatures attribute. These same feature strings apply to the hasFeature method call that is part of the SVG DOM's support for the DOMImplementation interface. In some cases the feature strings map directly to a set of attributes, properties or elements, in others they represent some functionality of the browser. Note that the format and naming for feature strings changed from SVG 1.0 to SVG 1.1. The SVG 1.0 feature strings are not listed here but can be found in the SVG Specification. Some browser support SVG 1.0 Feature strings for compatibility reasons. However, the SVG 1.0 feature strings are considered deprecated.At least one of the following feature is supported:At least one of the following feature is supported:The browser supports all the following features:The browser supports all of the DOM interfaces and methods that correspond to the language features for http://www.w3.org/TR/SVG11/feature#SVG-static.The browser supports all of the language features from http://www.w3.org/TR/SVG11/feature#SVG-static plus the feature http://www.w3.org/TR/SVG11/feature#Animation.The browser supports all of the DOM interfaces and methods that correspond to the language features for http://www.w3.org/TR/SVG11/feature#SVG-animation.The browser supports all of the language features from http://www.w3.org/TR/SVG11/feature#SVG-animation plus the following features:The browser supports all of the DOM interfaces and methods that correspond to the language features for http://www.w3.org/TR/SVG11/feature#SVG-dynamic.The browser supports the id, xml:base, xml:lang and xml:space attributesThe browser supports <svg>, <g>, <defs>, <desc>, <title>, <metadata>, <symbol> and <use> elements.The browser supports <svg>, <g>, <defs>, <desc>, <title>, <metadata> and <use> elements.The browser supports the enable-background attributeThe browser supports the <switch> element, and the requiredFeatures, requiredExtensions, systemLanguage attributesThe browser supports the <image> element.The browser supports the <style> element.The browser supports the clip and overflow attributes.The browser supports the <rect>, <circle>, <line>, <polyline>, <polygon>, <ellipse> and <path> elements.The browser supports the <text>, <tspan>, <tref>, <textPath>, <altGlyph>, <altGlyphDef>, <altGlyphItem> and <glyphRef> elements.The browser supports the <text> elementThe browser supports the color, fill, fill-rule, stroke, stroke-dasharray, stroke-dashoffset, stroke-linecap, stroke-linejoin, stroke-miterlimit, stroke-width, color-interpolation and color-rendering attributesThe browser supports the color, fill, fill-rule, stroke, stroke-dasharray, stroke-dashoffset, stroke-linecap, stroke-linejoin, stroke-miterlimit, stroke-width and color-rendering attributesThe browser supports the opacity, stroke-opacity and fill-opacity attributesThe browser supports the display, image-rendering, pointer-events, shape-rendering, text-rendering and visibility attributesThe browser supports the display and visibility attributesThe browser supports the <marker> elementThe browser supports the <linearGradient>, <radialGradient> and <stop> elementsThe browser supports the <pattern> elementThe browser supports the <clipPath> element and the clip-path, clip-rule attributesThe browser supports the <clipPath> element and the clip-path attributeThe browser supports the <mask> elementThe browser supports the <filter>, <feBlend>, <feColorMatrix>, <feComponentTransfer>, <feComposite>, <feConvolveMatrix>, <feDiffuseLighting>, <feDisplacementMap>, <feFlood>, <feGaussianBlur>, <feImage>, <feMerge>, <feMergeNode>, <feMorphology>, <feOffset>, <feSpecularLighting>, <feTile>, <feDistantLight>, <fePointLight>, <feSpotLight>, <feFuncR>, <feFuncG>, <feFuncB> and <feFuncA> elementsThe browser supports the <filter>, <feBlend>, <feColorMatrix>, <feComponentTransfer>, <feComposite>, <feFlood>, <feGaussianBlur>, <feImage>, <feMerge>, <feMergeNode>, <feOffset>, <feTile>, <feFuncR>, <feFuncG>, <feFuncB> and <feFuncA> elementsThe browser supports the onunload, onabort, onerror, onresize, onscroll and onzoom attributesThe browser supports the onfocusin, onfocusout, onactivate, onclick, onmousedown, onmouseup, onmouseover, onmousemove, onmouseout and onload attributesThe browser supports the onbegin, onend, onrepeat and onload attributesThe browser supports the <cursor> elementThe browser supports the <a> elementThe browser supports the xlink:type, xlink:href, xlink:role, xlink:arcrole, xlink:title, xlink:show and xlink:actuate attributesThe browser supports the <view> elementThe browser supports the <script> elementThe browser supports the <animate>, <set>, <animateMotion>, <animateTransform>, <animateColor> and <mpath> elementsThe browser supports the <font>, <font-face>, <glyph>, <missing-glyph>, <hkern>, <vkern>, <font-face-src>, <font-face-uri>, <font-face-format> and <font-face-name> elementsThe browser supports the <font>, <font-face>, <glyph>, <missing-glyph>, <hkern>, <font-face-src> and <font-face-name> elementsThe browser supports the <foreignObject> elementSee also requiredFeatures.svgBCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/requiredFeatures",
            "elements": [
                "animate",
                "circle",
                "clipPath",
                "defs",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "rect",
                "svg",
                "switch",
                "text",
                "textPath",
                "tspan",
                "use"
            ]
        },
        "restart": {
            "description": "The restart attribute specifies whether or not an animation can restart.You can use this attribute with the following SVG elements:This value indicates that the animation can be restarted at any time.This value indicates that the animation can only be restarted when it is not active (i.e. after the active end). Attempts to restart the animation during its active duration are ignored.This value indicates that the animation cannot be restarted for the time the document is loaded.No compatibility data found for svg.elements.animate.restart.Check for problems with this page or contribute missing data to mdn/browser-compat-data.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/restart",
            "elements": [
                "animate"
            ]
        },
        "result": {
            "description": "The result attribute defines the assigned name for this filter primitive. If supplied, then graphics that result from processing this filter primitive can be referenced by an in attribute on a subsequent filter primitive within the same <filter> element. If no value is provided, the output will only be available for re-use as the implicit input into the next filter primitive if that filter primitive provides no value for its in attribute.You can use this attribute with the following SVG elements:This value is a <custom-ident> and defines the name for the filter primitive. It is only meaningful within a given <filter> element and thus has only local scope. It is legal for the same <filter-primitive-reference> to appear multiple times within the same <filter> element. When referenced, this value will use the closest preceding filter primitive with the given result.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/result",
            "elements": [
                "feBlend",
                "feColorMatrix",
                "feComponentTransfer",
                "feComposite",
                "feConvolveMatrix",
                "feDiffuseLighting",
                "feDisplacementMap",
                "feDropShadow",
                "feFlood",
                "feGaussianBlur",
                "feImage",
                "feMerge",
                "feMorphology",
                "feOffset",
                "feSpecularLighting",
                "feTile",
                "feTurbulence"
            ]
        },
        "rotate": {
            "description": "The rotate attribute specifies how the animated element rotates as it travels along a path specified in an <animateMotion> element.You can use this attribute with the following SVG elements:The auto and auto-reverse values allow the animated element's rotation to change dynamically as it travels along the path. If the value of rotate is auto, the element turns to align its right-hand side in the current direction of motion. If the value is auto-reverse, it turns its left-hand side in the current direction of motion.Setting rotate's value to a number specifies a constant rotation, in degrees, that does not change with the animation. The default value of 0 keeps the animated element in its original orientation.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rotate",
            "elements": []
        },
        "rx": {
            "description": "The rx attribute defines a radius on the x-axis.You can use this attribute with the following SVG elements:For <ellipse>, rx defines the x-radius of the shape. With a value lower or equal to zero the ellipse won't be drawn at all.Note: Starting with SVG2, rx is a Geometry Property meaning this attribute can also be used as a CSS property for ellipses.For <rect>, rx defines the x-axis radius of the ellipse used to round off the corners of the rectangle.The way the value of the rx attribute is interpreted depend on both the ry attribute and the width of the rectangle:Note: Starting with SVG2, rx is a Geometry Property meaning this attribute can also be used as a CSS property for rects.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx",
            "elements": [
                "ellipse",
                "rect"
            ]
        },
        "ry": {
            "description": "The ry attribute defines a radius on the y-axis.You can use this attribute with the following SVG elements:For <ellipse>, ry defines the y-radius of the shape. With a value lower or equal to zero the ellipse won't be drawn at all.Note: Starting with SVG2, ry is a Geometry Property meaning this attribute can also be used as a CSS property for ellipses.For <rect>, ry defines the y-axis radius of the ellipse used to round off the corners of the rectangle.The way the value of the ry attribute is interpreted depend on both the rx attribute and the width of the rectangle:Note: Starting with SVG2, ry is a Geometry Property meaning this attribute can also be used as a CSS property for rects.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry",
            "elements": [
                "ellipse",
                "rect"
            ]
        },
        "scale": {
            "description": "The scale attribute defines the displacement scale factor to be used on a <feDisplacementMap> filter primitive. The amount is expressed in the coordinate system established by the primitiveUnits attribute on the <filter> element.You can use this attribute with the following SVG elements:This value defines the scale factor for the displacement.When the value of this attribute is 0, this operation has no effect on the source image.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/scale",
            "elements": [
                "feDisplacementMap"
            ]
        },
        "seed": {
            "description": "The seed attribute represents the starting number for the pseudo random number generator of the <feTurbulence> filter primitive.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/seed",
            "elements": [
                "feTurbulence"
            ]
        },
        "shapeRendering": {
            "description": "The shape-rendering attribute provides hints to the renderer about what tradeoffs to make when rendering shapes like paths, circles, or rectangles.Note: As a presentation attribute, shape-rendering can be used as a CSS property.You can use this attribute with the following SVG elements:This value indicates that the user agent shall make appropriate tradeoffs to balance speed, crisp edges and geometric precision, but with geometric precision given more importance than speed and crisp edges.This value indicates that the user agent shall emphasize rendering speed over geometric precision and crisp edges. This option will sometimes cause the user agent to turn off shape anti-aliasing.This value indicates that the user agent shall attempt to emphasize the contrast between clean edges of artwork over rendering speed and geometric precision. To achieve crisp edges, the user agent might turn off anti-aliasing for all lines and curves or possibly just for straight lines which are close to vertical or horizontal. Also, the user agent might adjust line positions and line widths to align edges with device pixels.Indicates that the user agent shall emphasize geometric precision over speed and crisp edges.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect"
            ]
        },
        "slope": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The slope attribute indicates the vertical stroke angle of a font.You can use this attribute with the following SVG elements:This value indicates the vertical stroke angle of the font.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/slope",
            "elements": []
        },
        "spacing": {
            "description": "The spacing attribute indicates how the user agent should determine the spacing between typographic characters that are to be rendered along a path.You can use this attribute with the following SVG elements:This value indicates that the user agent should use text-on-a-path layout algorithms to adjust the spacing between typographic characters in order to achieve visually appealing results.This value indicates that the typographic characters should be rendered exactly according to the spacing rules as specified by the layout rules for text-on-a-path.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/spacing",
            "elements": [
                "textPath"
            ]
        },
        "specularConstant": {
            "description": "The specularConstant attribute controls the ratio of reflection of the specular lighting. It represents the ks value in the Phong lighting model. The bigger the value the stronger the reflection.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/specularConstant",
            "elements": [
                "feSpecularLighting"
            ]
        },
        "specularExponent": {
            "description": "The specularExponent attribute controls the focus for the light source. The bigger the value the brighter the light.You can use this attribute with the following SVG elements:For <feSpecularLighting>, specularExponent defines the exponent value for the specular term.For <feSpotLight>, specularExponent defines the exponent value controlling the focus for the light source.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/specularExponent",
            "elements": [
                "feSpecularLighting",
                "feSpotLight"
            ]
        },
        "spreadMethod": {
            "description": "The spreadMethod attribute determines how a shape is filled beyond the defined edges of a gradient.You can use this attribute with the following SVG elements:This value indicates that the final color of the gradient fills the shape beyond the gradient's edges.This value indicates that the gradient repeats in reverse beyond its edges.This value specifies that the gradient repeats in the original order beyond its edges.By default, a gradient reaches to the edges of the shape being filled. To see the effects of this attribute, you will need to set the size of the gradient smaller than the shape.In the case of a linear gradient, the edges may be defined as a rectangle by the x1, x2, y1 and y2 attributes. In the case of a radial gradient, the edges may be defined as outer and inner circles by the cx, cy and r (outer) and fx, fy and fr (inner) attributes.Notice that the middle third of each gradient is the same. The outer thirds show the difference between the three spread methods.No compatibility data found for svg.attributes.presentation.spreadMethod.Check for problems with this page or contribute missing data to mdn/browser-compat-data.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/spreadMethod",
            "elements": [
                "linearGradient",
                "radialGradient"
            ]
        },
        "startOffset": {
            "description": "The startOffset attribute defines an offset from the start of the path for the initial current text position along the path after converting the path to the <textPath> element's coordinate system.You can use this attribute with the following SVG elements:A length represents a distance along the path measured in the current user coordinate system for the <textPath> element.If a percentage is given, then the start offset represents a percentage distance along the entire path. Thus, 0% indicates the start point of the path and 100% indicates the end point of the path.This value indicates a distance along the path measured in the current user coordinate system for the <textPath> element.Note: Negative values and values larger than the path length (e.g. 150%) are allowed.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/startOffset",
            "elements": [
                "textPath"
            ]
        },
        "stdDeviation": {
            "description": "The stdDeviation attribute defines the standard deviation for the blur operation.You can use this attribute with the following SVG elements:If two numbers are provided, the first number represents a standard deviation value along the x-axis. The second value represents a standard deviation along the y-axis. If one number is provided, then that value is used for both X and Y.A negative value is forbidden. A value of zero disables the effect of the given filter primitive (i.e., the result is the filter input image). If stdDeviation is 0 in only one of X or Y, then the effect is that the blur is only applied in the direction that has a non-zero value.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stdDeviation",
            "elements": [
                "feGaussianBlur"
            ]
        },
        "stemh": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The stemh attribute indicates the horizontal stem width of the font.The stem width refers to the dominant stem of the font. There may be two or more designed widths. For example, the main vertical stems of Roman characters will differ from the thin stems on serifed \"M\" and \"N\", plus there may be different widths for uppercase and lowercase characters in the same font. Also, either by design or by error, all stems may have slightly different widths.If this attribute is used, the units-per-em must also be used.You can use this attribute with the following SVG elements:This value indicates the horizontal stem width of the font.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stemh",
            "elements": []
        },
        "stemv": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The stemv attribute indicates the vertical stem width of the font.The vertical stem width is the width of vertical (or near-vertical) stems of glyphs. This information is often tied to hinting, and may not be directly accessible in some font formats. The measurement is meant for the dominant vertical stem in the font because there might be different groupings of vertical stems (e.g., one main one, and one lighter weight one as for an uppercase \"M\" or \"N\").If this attribute is used, the units-per-em must also be used.You can use this attribute with the following SVG elements:This value indicates the vertical stem width of the font.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stemv",
            "elements": []
        },
        "stitchTiles": {
            "description": "The stitchTiles attribute defines how the Perlin Noise tiles behave at the border.You can use this attribute with the following SVG elements:This value indicates that no attempt is made to achieve smooth transitions at the border of tiles which contain a turbulence function. Sometimes the result will show clear discontinuities at the tile borders.This value indicates that the user agent will automatically adjust the x and y values of the base frequency such that the <feTurbulence> node’s width and height (i.e., the width and height of the current subregion) contain an integral number of the tile width and height for the first octave.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stitchTiles",
            "elements": [
                "feTurbulence"
            ]
        },
        "stopColor": {
            "description": "The stop-color attribute indicates what color to use at a gradient stop.Note: With respect to gradients, SVG treats the transparent keyword differently than CSS. SVG does not calculate gradients in pre-multiplied space, so transparent really means transparent black. So, specifying a stop-color with the value transparent is equivalent to specifying a stop-color with the value black and a stop-opacity with the value 0.Note: As a presentation attribute, stop-color can be used as a CSS property.You can use this attribute with the following SVG elements:This keyword denotes the current fill color and can be specified in the same manner as within a <paint> specification for the fill and stroke attributes.This value indicates a color value.This value refers to an ICC color profile.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stop-color",
            "elements": [
                "stop"
            ]
        },
        "stopOpacity": {
            "description": "The stop-opacity attribute defines the opacity of a given color gradient stop.The opacity value used for the gradient calculation is the product of the value of stop-opacity and the opacity of the value of the stop-color attribute. For stop-color values that don't include explicit opacity information, the opacity is treated as 1.Note: As a presentation attribute, stop-opacity can be used as a CSS property.You can use this attribute with the following SVG elements:This value is either a <number> between 0 and 1 or a <percentage> value specifying the opacity of the color gradient stop.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stop-opacity",
            "elements": [
                "stop"
            ]
        },
        "strikethroughPosition": {
            "description": "« SVG Attribute reference homeThe strikethrough-position attribute represents the ideal vertical position of the strikethrough. The strikethrough position is expressed in the font's coordinate system.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/strikethrough-position",
            "elements": []
        },
        "strikethroughThickness": {
            "description": "« SVG Attribute reference homeThe strikethrough-thickness attribute represents the ideal thickness of the strikethrough. The strikethrough thickness is expressed in the font's coordinate system.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/strikethrough-thickness",
            "elements": []
        },
        "string": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The string attribute is a hint to the user agent, and specifies a list of formats that the font referenced by the parent <font-face-uri> element supports.You can use this attribute with the following SVG elements:This value specifies a list of formats that are supported by the font referenced by the parent <font-face-uri> element.The available types are: \"woff\", \"woff2\", \"truetype\", \"opentype\", \"embedded-opentype\", and \"svg\". See the src descriptor of the @font-face at-rule for more information.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/string",
            "elements": []
        },
        "stroke": {
            "description": "The stroke attribute is a presentation attribute defining the color (or any SVG paint servers like gradients or patterns) used to paint the outline of the shape;Note: As a presentation attribute stroke can be used as a CSS property.You can use this attribute with the following SVG elements:BCD tables only load in the browserNote: For information on using the context-stroke (and context-fill) values from HTML documents, see the documentation for the non-standard -moz-context-properties property.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "strokeDasharray": {
            "description": "The stroke-dasharray attribute is a presentation attribute defining the pattern of dashes and gaps used to paint the outline of the shape;Note: As a presentation attribute, stroke-dasharray can be used as a CSS property.You can use this attribute with the following SVG elements:A list of comma and/or white space separated <length>s and <percentage>s that specify the lengths of alternating dashes and gaps.If an odd number of values is provided, then the list of values is repeated to yield an even number of values. Thus, 5,3,2 is equivalent to 5,3,2,5,3,2.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray",
            "elements": [
                "circle",
                "ellipse",
                "path",
                "line",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "strokeDashoffset": {
            "description": "The stroke-dashoffset attribute is a presentation attribute defining an offset on the rendering of the associated dash array.Note: As a presentation attribute stroke-dashoffset can be used as a CSS property.You can use this attribute with the following SVG elements:The offset is usually expressed in user units resolved against the pathLength but if a <percentage> is used, the value is resolved as a percentage of the current viewport.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset",
            "elements": [
                "circle",
                "ellipse",
                "path",
                "line",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "strokeLinecap": {
            "description": "The stroke-linecap attribute is a presentation attribute defining the shape to be used at the end of open subpaths when they are stroked.Note: As a presentation attribute stroke-linecap can be used as a CSS property.You can use this attribute with the following SVG elements:The butt value indicates that the stroke for each subpath does not extend beyond its two endpoints. On a zero length subpath, the path will not be rendered at all.The round value indicates that at the end of each subpath the stroke will be extended by a half circle with a diameter equal to the stroke width. On a zero length subpath, the stroke consists of a full circle centered at the subpath's point.The square value indicates that at the end of each subpath the stroke will be extended by a rectangle with a width equal to half the width of the stroke and a height equal to the width of the stroke. On a zero length subpath, the stroke consists of a square with its width equal to the stroke width, centered at the subpath's point.BCD tables only load in the browser",
            "isRequired": false,
            "type": "\"butt\"|\"inherit\"|\"round\"|\"square\"",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap",
            "elements": [
                "path",
                "polyline",
                "line",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "strokeLinejoin": {
            "description": "The stroke-linejoin attribute is a presentation attribute defining the shape to be used at the corners of paths when they are stroked.Note: As a presentation attribute stroke-linejoin can be used as a CSS property.You can use this attribute with the following SVG elements:Note: The arcs value as been introduced in SVG2 and it isn't widely supported yet, see Browser compatibility below for details.The arcs value indicates that an arcs corner is to be used to join path segments. The arcs shape is formed by extending the outer edges of the stroke at the join point with arcs that have the same curvature as the outer edges at the join point.The bevel value indicates that a bevelled corner is to be used to join path segments.The miter value indicates that a sharp corner is to be used to join path segments. The corner is formed by extending the outer edges of the stroke at the tangents of the path segments until they intersect.Note: If the stroke-miterlimit is exceeded, the line join falls back to bevel.Note: the miter-clip value as been introduced in SVG2 and it isn't widely supported yet, see Browser compatibility below for details.The miter-clip value indicates that a sharp corner is to be used to join path segments. The corner is formed by extending the outer edges of the stroke at the tangents of the path segments until they intersect.If the stroke-miterlimit is exceeded, the miter is clipped at a distance equal to half the stroke-miterlimit value multiplied by the stroke width from the intersection of the path segments. This provides a better rendering than miter on very sharp join or in case of an animation.The round value indicates that a round corner is to be used to join path segments.BCD tables only load in the browser",
            "isRequired": false,
            "type": "\"bevel\"|\"inherit\"|\"miter\"|\"round\"",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin",
            "elements": [
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "strokeMiterlimit": {
            "description": "The stroke-miterlimit attribute is a presentation attribute defining a limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel.Note: As a presentation attribute stroke-miterlimit can be used as a CSS property.You can use this attribute with the following SVG elements:When two line segments meet at a sharp angle and miter joins have been specified for stroke-linejoin, it is possible for the miter to extend far beyond the thickness of the line stroking the path. The stroke-miterlimit ratio is used to define when the limit is exceeded, if so the join is converted from a miter to a bevel.The ratio of miter length (distance between the outer tip and the inner corner of the miter) to stroke-width is directly related to the angle (theta) between the segments in user space by the formula:\n  \n    \n      stroke-miterlimit\n      =\n      \n        \n          miterLength\n        \n        \n          stroke-width\n        \n      \n      =\n      \n        \n          1\n        \n        \n          \n            sin\n            \n              (\n              \n                \n                  θ\n                \n                \n                  2\n                \n              \n              )\n            \n          \n        \n      \n    \n  \nFor example, a miter limit of 1.414 converts miters to bevels for theta less than 90 degrees, a limit of 4.0 converts them for theta less than approximately 29 degrees, and a limit of 10.0 converts them for theta less than approximately 11.5 degrees.The value of stroke-miterlimit must be greater than or equal to 1.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit",
            "elements": [
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "strokeOpacity": {
            "description": "The stroke-opacity attribute is a presentation attribute defining the opacity of the paint server (color, gradient, pattern, etc) applied to the stroke of a shape.Note: As a presentation attribute stroke-opacity can be used as a CSS property.You can use this attribute with the following SVG elements:Note: SVG2 introduces percentage values for stroke-opacity, however, it is not widely supported yet (See Browser compatibility below) as a consequence, it is best practices to set opacity with a value in the range [0-1].It's important to know that the stroke partially covers the fill of a shape, so a stroke with an opacity different than 1 will partially show the fill underneath. To avoid this effect, it is possible to apply a global opacity with the opacity attribute or to put the stroke behind the fill with the paint-order attribute.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity",
            "elements": [
                "circle",
                "ellipse",
                "path",
                "line",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "strokeWidth": {
            "description": "The stroke-width attribute is a presentation attribute defining the width of the stroke to be applied to the shape.You can use this attribute with the following SVG elements:Note: A percentage value is always computed as a percentage of the normalized viewBox diagonal length.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width",
            "elements": [
                "circle",
                "ellipse",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "surfaceScale": {
            "description": "The surfaceScale attribute represents the height of the surface for a light filter primitive.You can use this attribute with the following SVG elements:For <feSpecularLighting>, surfaceScale defines the height of the surface.For <feDiffuseLighting>, surfaceScale defines the height of the surface.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/surfaceScale",
            "elements": [
                "feDiffuseLighting",
                "feSpecularLighting"
            ]
        },
        "systemLanguage": {
            "description": "The systemLanguage attribute represents a list of supported language tags. This list is matched against the language defined in the user preferences.You can use this attribute with the following SVG elements:The value is a set of comma-separated tokens, each of which must be a language tag, as defined in RFC 5646: Tags for Identifying Languages (also known as BCP 47).systemLanguage is often used in conjunction with the <switch> element. If the attribute is used in other situations, then it represents a simple switch on the given element whether to render the element or not.Note: If several alternative language objects are enclosed in a <switch> and none of them matches, this may lead to situations where no content is displayed. It is thus recommended to include a \"catch-all\" choice at the end of such a <switch> which is acceptable in all cases.The attribute evaluates to \"true\" if one of the language tags indicated by user preferences is a case-insensitive match or prefix (followed by a \"-\") of one of the language tags given in the value of this parameter. Otherwise it evaluates to \"false\".Note: The prefix matching rule does not imply that if a user understands a language with a certain tag, that the user will also understand all languages with the tag as prefix.If the attribute is not present, then it implicitly evaluates to \"true\". If a null string or empty string value is given, the attribute evaluates to \"false\".The prefix rule allows the use of prefix tags if this is the case.Multiple languages may be listed for content that is intended for multiple audiences. For example, content that is presented simultaneously in the original Maori and English versions, would call for:However, just because multiple languages are present within the object on which the systemLanguage test attribute is placed, this does not mean that it is intended for multiple linguistic audiences. An example would be a beginner's language primer, such as \"A First Lesson in Latin,\" which is clearly intended to be used by an English-literate audience. In this case, the attribute should only include en.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/systemLanguage",
            "elements": [
                "animate",
                "circle",
                "clipPath",
                "defs",
                "ellipse",
                "foreignObject",
                "g",
                "image",
                "line",
                "mask",
                "path",
                "pattern",
                "polygon",
                "polyline",
                "rect",
                "svg",
                "switch",
                "text",
                "textPath",
                "tspan",
                "use"
            ]
        },
        "tableValues": {
            "description": "The tableValues attribute defines a list of numbers defining a lookup table of values for a for a color component transfer function.You can use this attribute with the following SVG elements:This value holds a comma- and/or space-separated list of <number>s, which define a lookup table for the color component transfer function. Each number can be between 0 and 1.An empty list results in an identity transfer function.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/tableValues",
            "elements": [
                "feFuncA",
                "feFuncB",
                "feFuncG",
                "feFuncR"
            ]
        },
        "targetX": {
            "description": "The targetX attribute determines the positioning in horizontal direction of the convolution matrix relative to a given target pixel in the input image. The leftmost column of the matrix is column number zero. The value must be such that: 0 <= targetX < orderX.You can use this attribute with the following SVG elements:This value indicates the positioning in horizontal direction of the convolution matrix relative to a given target pixel in the input image.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/targetX",
            "elements": [
                "feConvolveMatrix"
            ]
        },
        "targetY": {
            "description": "The targetY attribute determines the positioning in vertical direction of the convolution matrix relative to a given target pixel in the input image. The topmost row of the matrix is row number zero. The value must be such that: 0 <= targetY < orderY.You can use this attribute with the following SVG elements:This value indicates the positioning in vertical direction of the convolution matrix relative to a given target pixel in the input image.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/targetY",
            "elements": [
                "feConvolveMatrix"
            ]
        },
        "textAnchor": {
            "description": "The text-anchor attribute is used to align (start-, middle- or end-alignment) a string of pre-formatted text or auto-wrapped text where the wrapping area is determined from the inline-size property relative to a given point.This attribute is not applicable to other types of auto-wrapped text. For those cases you should use text-align. For multi-line text, the alignment takes place for each line.The text-anchor attribute is applied to each individual text chunk within a given <text> element. Each text chunk has an initial current text position, which represents the point in the user coordinate system resulting from (depending on context) application of the x and y attributes on the <text> element, any x or y attribute values on a <tspan>, <tref> or <altGlyph> element assigned explicitly to the first rendered character in a text chunk, or determination of the initial current text position for a <textPath> element.Note: As a presentation attribute, text-anchor can be used as a CSS property.You can use this attribute with the following SVG elements:The rendered characters are aligned such that the start of the text string is at the initial current text position. For an element with a direction property value of ltr (typical for most European languages), the left side of the text is rendered at the initial text position. For an element with a direction property value of rtl (typical for Arabic and Hebrew), the right side of the text is rendered at the initial text position. For an element with a vertical primary text direction (often typical for Asian text), the top side of the text is rendered at the initial text position.The rendered characters are aligned such that the middle of the text string is at the current text position. (For text on a path, conceptually the text string is first laid out in a straight line. The midpoint between the start of the text string and the end of the text string is determined. Then, the text string is mapped onto the path with this midpoint placed at the current text position.)The rendered characters are shifted such that the end of the resulting rendered text (final current text position before applying the text-anchor property) is at the initial current text position. For an element with a direction property value of ltr (typical for most European languages), the right side of the text is rendered at the initial text position. For an element with a direction property value of rtl (typical for Arabic and Hebrew), the left side of the text is rendered at the initial text position. For an element with a vertical primary text direction (often typical for Asian text), the bottom of the text is rendered at the initial text position.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "textDecoration": {
            "description": "The text-decoration attribute defines whether text is decorated with an underline, overline and/or strike-through. It is a shorthand for the text-decoration-line and text-decoration-style properties.The fill and stroke of the text decoration are given by the fill and stroke of the text at the point where the text decoration is declared.The paint order of the text decoration, i.e. the fill and stroke, is determined by the value of the paint-order attribute at the point where the text decoration is declared.Note: As a presentation attribute, text-decoration can be used as a CSS property. See the css text-decoration property for more information.You can use this attribute with the following SVG elements:For a description of the values, please refer to the CSS text-decoration property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-decoration",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "textRendering": {
            "description": "The text-rendering attribute provides hints to the renderer about what tradeoffs to make when rendering text.Note: As a presentation attribute, text-rendering can be used as a CSS property. See the css text-rendering property for more information.You can use this attribute with the following SVG elements:This value indicates that the user agent shall make appropriate tradeoffs to balance speed, legibility and geometric precision, but with legibility given more importance than speed and geometric precision.This value indicates that the user agent shall emphasize rendering speed over legibility and geometric precision. This option will sometimes cause some user agents to turn off text anti-aliasing.This value indicates that the user agent shall emphasize legibility over rendering speed and geometric precision. The user agent will often choose whether to apply anti-aliasing techniques, built-in font hinting or both to produce the most legible text.This value indicates that the user agent shall emphasize geometric precision over legibility and rendering speed. This option will usually cause the user agent to suspend the use of hinting so that glyph outlines are drawn with comparable geometric precision to the rendering of path data.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-rendering",
            "elements": [
                "text"
            ]
        },
        "textLength": {
            "description": "The textLength attribute, available on SVG <text> and <tspan> elements, lets you specify the width of the space into which the text will draw. The user agent will ensure that the text does not extend farther than that distance, using the method or methods specified by the lengthAdjust attribute. By default, only the spacing between characters is adjusted, but the glyph size can also be adjusted if you change lengthAdjust.By using textLength, you can ensure that your SVG text displays at the same width regardless of conditions including web fonts failing to load (or not having loaded yet).You can use this attribute with the following SVG elements:This value specifies the width of the space the text will be adjusted to occupy as absolute length or percentage.A numeric value outlines a length referring to the units of the current coordinate system.Let's create a simple example that presents text you can resize using an <input> element of type \"range\".Let's start with the SVG. It's pretty basic, with a 1000-by-300 pixel space mapped into a 10 centimeter by 3 centimeter box.First, a <rect> element is used to create and stroke a rectangle to contain the text. Then <text> is used to create the text element itself, with an id of \"hello\".The HTML is also simple, with only two displayed elements contained inside a grouping <div>:The <input> element, of type \"range\", is used to create the slider control the user will manipulate to change the width of the text. A <span> element of ID \"widthDisplay\" is provided to display the current width value.Finally, let's have a look at the JavaScript code. It starts by stashing references to the elements it will need to access, using Document.getElementById():After fetching the element references, an EventListener is established by calling addEventListener() on the slider control, to receive any input events which occur. These events will be sent any time the slider's value changes, even if the user hasn't stopped moving it, so we can responsively adjust the text width.When an \"input\" event occurs, we call newValueSpecifiedUnits() to set the value of textLength to the slider's new value, using the SVGLength interface's SVG_LENGTHTYPE_PX unit type to indicate that the value represents pixels. Note that we have to dive into textLength to get its baseVal property; textLength is stored as an SVGLength object, so we can't treat it like a plain number.After updating the text width, the contents of the widthDisplay box are updated with the new value as well, and we're finished.Here's what the example looks like. Try dragging the slider around to get a feel for what it does.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/textLength",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "to": {
            "description": "The to attribute indicates the final value of the attribute that will be modified during the animation.The value of the attribute will change between the from attribute value and this value.You can use this attribute with the following SVG elements:For <animate>, <animateColor>, <animateMotion>, and <animateTransform>, to specifies the ending value of the animation.The exact value type for this attribute depend on the value of the attribute that will be animated.If a list of values is defined via the values attribute, the to attribute is ignored.For the <set> element, to specifies the value for the attribute during the duration of the element.The exact value type for this attribute depend on the value of the attribute that will be animated.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/To",
            "elements": [
                "animate"
            ]
        },
        "transform": {
            "description": "The transform attribute defines a list of transform definitions that are applied to an element and the element's children.Note: As of SVG2, transform is a presentation attribute, meaning it can be used as a CSS property. However, be aware that there are some differences in syntax between the CSS property and the attribute. See the documentation for the CSS property transform for the specific syntax to use in that case.You can use this attribute with any SVG element.In SVG 1.1, only these 16 elements were allowed to use it: <a>, <circle>, <clipPath>, <defs>, <ellipse>, <foreignObject>, <g>, <image>, <line>, <path>, <polygon>, <polyline>, <rect>, <switch>, <text>, and <use>).Also, as a legacy from SVG 1.1, <linearGradient> and <radialGradient> support the gradientTransform attribute, and <pattern> supports the patternTransform attribute, both of which act exactly like the transform attribute.The following transform functions can be used by the transform attribute <transform-list>Warning: As per the spec, you should be able to also use CSS transform functions. However, the compatibility isn't guaranteed.The matrix(<a> <b> <c> <d> <e> <f>) transform function specifies a transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix:\n  \n    \n      \n        (\n        \n          \n            \n              a\n            \n            \n              c\n            \n            \n              e\n            \n          \n          \n            \n              b\n            \n            \n              d\n            \n            \n              f\n            \n          \n          \n            \n              0\n            \n            \n              0\n            \n            \n              1\n            \n          \n        \n        )\n      \n      \\begin{pmatrix} a & c & e \\ b & d & f \\ 0 & 0 & 1 \\end{pmatrix}\n    \n   which maps coordinates from a previous coordinate system into a new coordinate system by the following matrix equalities:\n  \n    \n      \n        \n          (\n          \n            \n              \n                \n                  x\n                  \n                    \n                      newCoordSys\n                    \n                  \n                \n              \n            \n            \n              \n                \n                  y\n                  \n                    \n                      newCoordSys\n                    \n                  \n                \n              \n            \n            \n              \n                1\n              \n            \n          \n          )\n        \n        =\n        \n          (\n          \n            \n              \n                a\n              \n              \n                c\n              \n              \n                e\n              \n            \n            \n              \n                b\n              \n              \n                d\n              \n              \n                f\n              \n            \n            \n              \n                0\n              \n              \n                0\n              \n              \n                1\n              \n            \n          \n          )\n        \n        \n          (\n          \n            \n              \n                \n                  x\n                  \n                    \n                      prevCoordSys\n                    \n                  \n                \n              \n            \n            \n              \n                \n                  y\n                  \n                    \n                      prevCoordSys\n                    \n                  \n                \n              \n            \n            \n              \n                1\n              \n            \n          \n          )\n        \n        =\n        \n          (\n          \n            \n              \n                a\n                \n                  x\n                  \n                    \n                      prevCoordSys\n                    \n                  \n                \n                +\n                c\n                \n                  y\n                  \n                    \n                      prevCoordSys\n                    \n                  \n                \n                +\n                e\n              \n            \n            \n              \n                b\n                \n                  x\n                  \n                    \n                      prevCoordSys\n                    \n                  \n                \n                +\n                d\n                \n                  y\n                  \n                    \n                      prevCoordSys\n                    \n                  \n                \n                +\n                f\n              \n            \n            \n              \n                1\n              \n            \n          \n          )\n        \n      \n       \\begin{pmatrix} x_{\\mathrm{newCoordSys}} \\ y_{\\mathrm{newCoordSys}} \\ 1 \\end{pmatrix} = \\begin{pmatrix} a & c & e \\ b & d & f \\ 0 & 0 & 1 \\end{pmatrix} \\begin{pmatrix} x_{\\mathrm{prevCoordSys}} \\ y_{\\mathrm{prevCoordSys}} \\ 1 \\end{pmatrix} = \\begin{pmatrix} a x_{\\mathrm{prevCoordSys}} + c y_{\\mathrm{prevCoordSys}} + e \\ b x_{\\mathrm{prevCoordSys}} + d y_{\\mathrm{prevCoordSys}} + f \\ 1 \\end{pmatrix}\n    \n  \nThe translate(<x> [<y>]) transform function moves the object by x and y. If y is not provided, it is assumed to be 0.In other words:The scale(<x> [<y>]) transform function specifies a scale operation by x and y. If y is not provided, it is assumed to be equal to x.The rotate(<a> [<x> <y>]) transform function specifies a rotation by a degrees about a given point. If optional parameters x and y are not supplied, the rotation is about the origin of the current user coordinate system. If optional parameters x and y are supplied, the rotation is about the point (x, y).The skewX(<a>) transform function specifies a skew transformation along the x axis by a degrees.The skewY(<a>) transform function specifies a skew transformation along the y axis by a degrees.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform",
            "elements": []
        },
        "u1": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The u1 attribute specifies list of Unicode characters (refer to the description of the unicode attribute of the <glyph> element for a description of how to express individual Unicode characters) and/or ranges of Unicode characters, which identify a set of possible first glyphs in a kerning pair.If a given Unicode character within the set has multiple corresponding <glyph> elements (i.e., there are multiple <glyph> elements with the same unicode attribute value but different glyph-name values), then all such glyphs are included in the set. Comma is the separator character; thus, to kern a comma, specify the comma as part of a range of Unicode characters or as a glyph name using the g1 attribute. The total set of possible first glyphs in the kerning pair is the union of glyphs specified by the u1 and g1 attributes.You can use this attribute with the following SVG elements:This value indicates a comma-separated sequence of Unicode characters and/or ranges of Unicode characters, which identify a set of possible first glyphs in a kerning pair.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/u1",
            "elements": []
        },
        "u2": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The u2 attribute specifies list of Unicode characters (refer to the description of the unicode attribute of the <glyph> element for a description of how to express individual Unicode characters) and/or ranges of Unicode characters, which identify a set of possible second glyphs in a kerning pair.If a given Unicode character within the set has multiple corresponding <glyph> elements (i.e., there are multiple <glyph> elements with the same unicode attribute value but different glyph-name values), then all such glyphs are included in the set. Comma is the separator character; thus, to kern a comma, specify the comma as part of a range of Unicode characters or as a glyph name using the g2 attribute. The total set of possible second glyphs in the kerning pair is the union of glyphs specified by the u2 and g2 attributes.You can use this attribute with the following SVG elements:This value indicates a comma-separated sequence of Unicode characters and/or ranges of Unicode characters, which identify a set of possible second glyphs in a kerning pair.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/u2",
            "elements": []
        },
        "underlinePosition": {
            "description": "« SVG Attribute reference homeThe underline-position attribute represents the ideal vertical position of the underline. The underline position is expressed in the font's coordinate system.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/underline-position",
            "elements": []
        },
        "underlineThickness": {
            "description": "« SVG Attribute reference homeThe underline-thickness attribute represents the ideal thickness of the underline. The underline thickness is expressed in the font's coordinate system.You can use this attribute with the following SVG elements:",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/underline-thickness",
            "elements": []
        },
        "unicode": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The unicode attribute specifies one or more Unicode characters indicating the sequence of Unicode characters which corresponds to a glyph.If a character is provided, then this glyph corresponds to the given Unicode character. If multiple characters are provided, then this glyph corresponds to the given sequence of Unicode characters. One use of a sequence of characters is ligatures. For example, if unicode=\"ffl\", then the given glyph will be used to render the sequence of characters \"f\", \"f\", and \"l\".It is often useful to refer to characters using XML character references expressed in hexadecimal notation or decimal notation. For example, unicode=\"ffl\" could be expressed as XML character references in hexadecimal notation as unicode=\"&#x66;&#x66;&#x6c;\" or in decimal notation as unicode=\"&#102;&#102;&#108;\".The unicode attribute contributes to the process for deciding which glyph(s) are used to represent which character(s). If the attribute is not provided for a given <glyph>, then the only way to use this glyph is via an <altGlyph> reference.You can use this attribute with the following SVG elements:This value specifies one or more Unicode characters corresponding to a glyph.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/unicode",
            "elements": []
        },
        "unicodeBidi": {
            "description": "The unicode-bidi attribute specifies how the accumulation of the background image is managed.Note: As a presentation attribute, unicode-bidi can be used as a CSS property. See the CSS unicode-bidi property for more information.You can use this attribute with the following SVG elements:For a description of the values, please refer to the CSS unicode-bidi property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/unicode-bidi",
            "elements": [
                "textPath",
                "text",
                "tspan"
            ]
        },
        "unicodeRange": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The unicode-range attribute defines the range of ISO 10646 characters possibly covered by the glyphs in a font.You can use this attribute with the following SVG elements:This value is a comma-separated list of ISO 10646 characters possibly covered by the glyphs in the font.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/unicode-range",
            "elements": []
        },
        "unitsPerEm": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The units-per-em attribute specifies the number of coordinate units on the \"em square\", an abstract square whose height is the intended distance between lines of type in the same type size. This is the size of the design grid on which glyphs are laid out.Note: This value is almost always necessary as nearly every other attribute requires the definition of a design grid.You can use this attribute with the following SVG elements:This value indicates the number of coordinate units on the em square.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/units-per-em",
            "elements": []
        },
        "vAlphabetic": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The v-alphabetic attribute defines indicates the alignment coordinate for glyphs to achieve alphabetic baseline alignment. The value is an offset in the font coordinate system relative to the glyph-specific vert-origin-x attribute.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/v-alphabetic",
            "elements": []
        },
        "vHanging": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The v-hanging attribute indicates the alignment coordinate for glyphs to achieve hanging baseline alignment. The value is an offset in the font coordinate system relative to the glyph-specific vert-origin-x attribute.You can use this attribute with the following SVG elements:This value indicates the alignment coordinate for the glyphs to achieve hanging baseline alignment.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/v-hanging",
            "elements": []
        },
        "vIdeographic": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The v-ideographic attribute indicates the alignment coordinate for glyphs to achieve ideographic baseline alignment for vertically oriented glyph layouts. The value is an offset in the font coordinate system relative to the glyph-specific vert-origin-x attribute.You can use this attribute with the following SVG elements:This value indicates the alignment coordinate for the glyphs.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/v-ideographic",
            "elements": []
        },
        "vMathematical": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The v-mathematical attribute indicates the alignment coordinate for glyphs to achieve mathematical baseline alignment for vertically oriented glyph layouts. The value is an offset in the font coordinate system relative to the glyph-specific vert-origin-x attribute.You can use this attribute with the following SVG elements:This value indicates the alignment coordinate for the glyphs.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/v-mathematical",
            "elements": []
        },
        "values": {
            "description": "The values attribute has different meanings, depending upon the context where it's used, either it defines a sequence of values used over the course of an animation, or it's a list of numbers for a color matrix, which is interpreted differently depending on the type of color change to be performed.You can use this attribute with the following SVG elements:For <animate>, <animateColor>, <animateMotion>, and <animateTransform>, values is a list of values defining the sequence of values over the course of the animation. If this attribute is specified, any from, to, and by attribute values set on the element are ignored.The value holds a semicolon-separated list of one or more values. The type of the values is defined by the href and attributeName attributes.For the <feColorMatrix> element, values is a list of numbers interpreted differently depending on the value of the type attribute.The value is a list of numbers, which is interpreted differently depending on the value of the type attribute:",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/values",
            "elements": [
                "animate",
                "feColorMatrix"
            ]
        },
        "vectorEffect": {
            "description": "The vector-effect property specifies the vector effect to use when drawing an object. Vector effects are applied before any of the other compositing operations, i.e. filters, masks and clips.Note: As a presentation attribute, vector-effect can be used as a CSS property.You can use this attribute with the following SVG elements:This value specifies that no vector effect shall be applied, i.e. the default rendering behavior is used which is to first fill the geometry of a shape with a specified paint, then stroke the outline with a specified paint.This value modifies the way an object is stroked. Normally stroking involves calculating stroke outline of the shape's path in current user coordinate system and filling that outline with the stroke paint (color or gradient). The resulting visual effect of this value is that the stroke width is not dependant on the transformations of the element (including non-uniform scaling and shear transformations) and zoom level.This value specifies a special user coordinate system used by the element and its descendants. The scale of that user coordinate system does not change in spite of any transformation changes from a host coordinate space. However, it does not specify the suppression of rotation and skew. Also, it does not specify the origin of the user coordinate system. Since this value suppresses scaling of the user coordinate system, it also has the characteristics of non-scaling-stroke.This value specifies a special user coordinate system used by the element and its descendants. The rotation and skew of that user coordinate system is suppressed in spite of any transformation changes from a host coordinate space. However, it does not specify the suppression of scaling. Also, it does not specify the origin of user coordinate system.This value specifies a special user coordinate system used by the element and its descendants. The position of user coordinate system is fixed in spite of any transformation changes from a host coordinate space. However, it does not specify the suppression of rotation, skew and scaling. When this vector effect and the transform property are defined at the same time, that property is consumed for this effect.No compatibility data found for svg.attributes.vector-effect.Check for problems with this page or contribute missing data to mdn/browser-compat-data.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/vector-effect",
            "elements": [
                "circle",
                "ellipse",
                "foreignObject",
                "image",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan",
                "use"
            ]
        },
        "version": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The version attribute is used to indicate what specification a SVG document conforms to. It is only allowed on the root <svg> element. It is purely advisory and has no influence on rendering or processing.While it is specified to accept any number, the only two valid choices are currently 1.0 and 1.1.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/version",
            "elements": [
                "svg"
            ]
        },
        "vertAdvY": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The vert-adv-y attribute indicates the vertical advance after rendering a glyph in vertical orientation.You can use this attribute with the following SVG elements:For <font> elements, vert-adv-y specifies the default vertical advance for a glyph in vertical orientation.This value indicates the default vertical advance of the glyph in vertical directionFor <glyph> and <missing-glyph> elements, vert-adv-y specifies the vertical advance for a glyph in vertical orientation.This value indicates the vertical advance of the glyph in vertical directionBCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/vert-adv-y",
            "elements": []
        },
        "vertOriginX": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The vert-origin-x attribute indicates the x-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text.You can use this attribute with the following SVG elements:This value indicates the x-coordinate of the origin of a glyph for vertically oriented text.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/vert-origin-x",
            "elements": []
        },
        "vertOriginY": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The vert-origin-y attribute indicates the y-coordinate in the font coordinate system of the origin of a glyph to be used when drawing vertically oriented text.You can use this attribute with the following SVG elements:This value indicates the y-coordinate of the origin of a glyph for vertically oriented text.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/vert-origin-y",
            "elements": []
        },
        "viewBox": {
            "description": "The viewBox attribute defines the position and dimension, in user space, of an SVG viewport.The value of the viewBox attribute is a list of four numbers: min-x, min-y, width and height. The numbers separated by whitespace and/or a comma, which specify a rectangle in user space which is mapped to the bounds of the viewport established for the associated SVG element (not the browser viewport).You can use this attribute with the following SVG elements:The exact effect of this attribute is influenced by the preserveAspectRatio attribute.Note: Values for width or height lower or equal to 0 disable rendering of the element.For <marker>, viewBox defines the position and dimension for the content of the <marker> element.For <pattern>, viewBox defines the position and dimension for the content of the pattern tile.For <svg>, viewBox defines the position and dimension for the content of the <svg> element.For <symbol>, viewBox defines the position and dimension for the content of the <symbol> element.For <view>, viewBox defines the position and dimension for the content of the <view> element.",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox",
            "elements": [
                "marker",
                "pattern",
                "svg",
                "symbol",
                "view"
            ]
        },
        "viewTarget": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The viewTarget attribute indicates the target object associated with the view.You can use this attribute with the following SVG elements:This value specifies the name of the object associated with the view.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewTarget",
            "elements": [
                "view"
            ]
        },
        "visibility": {
            "description": "The visibility attribute lets you control the visibility of graphical elements. With a value of hidden or collapse the current graphics element is invisible.Note: If the visibility attribute is set to hidden on a text element, then the text is invisible but still takes up space in text layout calculations.Depending on the value of attribute pointer-events, graphics elements which have their visibility attribute set to hidden still might receive events.Note: As a presentation attribute, visibility can be used as a CSS property. See the css visibility property for more information.You can use this attribute with the following SVG elements:This value indicates that the element will be painted.This value indicates that the element will not be painted. Though it is still part of the rendering tree, i.e. it may receive pointer events depending on the pointer-events attribute, may receive focus depending on the tabindex attribute, contributes to bounding box calculations and clipping paths, and does affect text layout.This value is equal to hidden.The following example toggles the CSS visibility of the SVG image path.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/visibility",
            "elements": [
                "circle",
                "ellipse",
                "foreignObject",
                "image",
                "line",
                "path",
                "polygon",
                "polyline",
                "rect",
                "text",
                "textPath",
                "tspan"
            ]
        },
        "widths": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The widths attribute indicates a list of range values, each followed by one or more glyph widths.You can use this attribute with the following SVG elements:This value is a comma-separated list of UCS range values as defined in ISO 10646, each followed by one or more glyph widths.If this attribute is used, the units-per-em attribute must also be used.If the range is omitted, a range of U+0-7FFFFFFF is assumed which covers all characters and their glyphs. If not enough glyph widths are given, the last in the list is replicated to cover that range. If too many widths are provided, the extras are ignored.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/widths",
            "elements": []
        },
        "wordSpacing": {
            "description": "The word-spacing attribute specifies spacing behavior between words.If a <length> is provided without a unit identifier (e.g. an unqualified number such as 128), the browser processes the <length> as a width value in the current user coordinate system.If a <length> is provided with one of the unit identifiers (e.g. .25em or 1%), then the browser converts the <length> into a corresponding value in the current user coordinate system.Note: As a presentation attribute, word-spacing can be used as a CSS property. See the css word-spacing property for more information.You can use this attribute with the following SVG elements:For a description of the values, please refer to the CSS letter-spacing property.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/word-spacing",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "writingMode": {
            "description": "The writing-mode attribute specifies whether the initial inline-progression-direction for a <text> element shall be left-to-right, right-to-left, or top-to-bottom. The writing-mode attribute applies only to <text> elements; the attribute is ignored for <tspan>, <tref>, <altGlyph> and <textPath> sub-elements. (Note that the inline-progression-direction can change within a <text> element due to the Unicode bidirectional algorithm and properties direction and unicode-bidi.)Note: As a presentation attribute, writing-mode can be used as a CSS property. See the CSS writing-mode property for more information.You can use this attribute with the following SVG elements:This value defines a top-to-bottom block flow direction. Both the writing mode and the typographic mode are horizontal.This value defines a right-to-left block flow direction. Both the writing mode and the typographic mode are vertical.This value defines a left-to-right block flow direction. Both the writing mode and the typographic mode are vertical.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/writing-mode",
            "elements": [
                "text",
                "textPath",
                "tspan"
            ]
        },
        "x": {
            "description": "The x attribute defines a x-axis coordinate in the user coordinate system.You can use this attribute with the following SVG elements:Warning: As of SVG2 <altGlyph> is deprecated and shouldn't be used.For <altGlyph>, x defines the x-axis coordinate of the alternate glyph.For <feBlend>, x defines the minimum x coordinate for the rendering area of the primitive.For <feColorMatrix>, x defines the minimum x coordinate for the rendering area of the primitive.For <feComponentTransfer>, x defines the minimum x coordinate for the rendering area of the primitive.For <feComposite>, x defines the minimum x coordinate for the rendering area of the primitive.For <feConvolveMatrix>, x defines the minimum x coordinate for the rendering area of the primitive.For <feDiffuseLighting>, x defines the minimum x coordinate for the rendering area of the primitive.For <feDisplacementMap>, x defines the minimum x coordinate for the rendering area of the primitive.For <feDropShadow>, x defines the minimum x coordinate for the rendering area of the primitive.For <feFlood>, x defines the minimum x coordinate for the rendering area of the primitive.For <feFuncA>, x defines the minimum x coordinate for the rendering area of the primitive.For <feFuncB>, x defines the minimum x coordinate for the rendering area of the primitive.For <feFuncG>, x defines the minimum x coordinate for the rendering area of the primitive.For <feFuncR>, x defines the minimum x coordinate for the rendering area of the primitive.For <feGaussianBlur>, x defines the minimum x coordinate for the rendering area of the primitive.For <feImage>, x defines the minimum x coordinate for the rendering area of the primitive.For <feMerge>, x defines the minimum x coordinate for the rendering area of the primitive.For <feMergeNode>, x defines the minimum x coordinate for the rendering area of the primitive.For <feMorphology>, x defines the minimum x coordinate for the rendering area of the primitive.For <feOffset>, x defines the minimum x coordinate for the rendering area of the primitive.For <fePointLight>, x defines the x location for the light source in the coordinate system defined by the primitiveUnits attribute on the <filter> element.For <feSpecularLighting>, x defines the minimum x coordinate for the rendering area of the primitive.For <feSpotLight>, x defines the x location for the light source in the coordinate system defined by the primitiveUnits attribute on the <filter> element.For <feTile>, x defines the minimum x coordinate for the rendering area of the primitive.For <feTurbulence>, x defines the minimum x coordinate for the rendering area of the primitive.For <filter>, x defines the x coordinate of the upper left corner for the rendering area of the filter.For <foreignObject>, x defines the  x coordinate of the upper left corner of its viewport.Note: Starting with SVG2, x is a Geometry Property meaning this attribute can also be used as a CSS property for <foreignObject>.Warning: As of SVG2 <glyphRef> is deprecated and shouldn't be used.For <glyphRef>, x defines the x-axis coordinate of the glyph.For <image>, x defines the  x coordinate of the upper left corner of the image.Note: Starting with SVG2, x is a Geometry Property meaning this attribute can also be used as a CSS property for images.For <mask>, x defines the  x coordinate of the upper left corner of its area of effect. The exact effect of this attribute is influenced by the maskUnits attribute.For <pattern>, x defines the  x coordinate of the upper left corner of the tile pattern. The exact effect of this attribute is influenced by the patternUnits and patternTransform attributes.For <rect>, x defines the  x coordinate of the upper left corner of the shape.Note: Starting with SVG2, x is a Geometry Property meaning this attribute can also be used as a CSS property for rectangles.For <svg>, x defines the  x coordinate of the upper left corner of its viewport.Note: Starting with SVG2, x is a Geometry Property meaning this attribute can also be used as a CSS property for <svg>.For <text>, if it contain a single value, x defines the x coordinate on where the content text position must be placed. The content text position is usually a point on the baseline of the first line of text. The exact content text position is influenced by some properties like text-anchor, or direction.If there are multiple values, x defines the x coordinate of each individual glyph from the text. If there are less values than glyphs, the remaining glyphs are placed in the continuity of the last positioned glyph. If there are more values than glyphs, extra values are ignored.Warning: As of SVG2 <tref> is deprecated and shouldn't be used.For <tref>, if it contain a single value, x defines the x coordinate on where the content text position must be placed. The content text position is usually a point on the baseline of the first line of text. The exact content text position is influenced by some properties like text-anchor, or direction.If there are multiple values, x defines the x coordinate of each individual glyph from the text. If there are less values than glyphs, the remaining glyphs are placed in the continuity of the last positioned glyph. If there are more values than glyphs, extra values are ignored.For <tspan>, if it contain a single value, x defines the x coordinate on where the content text position must be placed. The content text position is usually a point on the baseline of the first line of text. The exact content text position is influenced by some properties like text-anchor, or direction.If there are multiple values, x defines the x coordinate of each individual glyph from the text. If there are less values than glyphs, the remaining glyphs are placed in the continuity of the last positioned glyph. If there are more values than glyphs, extra values are ignored.For <use>, x defines the  x coordinate of the upper left corner of the referenced element.Note: Starting with SVG2, x is a Geometry Property meaning this attribute can also be used as a CSS property for used elements.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/x",
            "elements": [
                "feBlend",
                "feColorMatrix",
                "feComponentTransfer",
                "feComposite",
                "feConvolveMatrix",
                "feDiffuseLighting",
                "feDisplacementMap",
                "feDropShadow",
                "feFlood",
                "feFuncA",
                "feFuncB",
                "feFuncG",
                "feFuncR",
                "feGaussianBlur",
                "feImage",
                "feMerge",
                "feMergeNode",
                "feMorphology",
                "feOffset",
                "fePointLight",
                "feSpecularLighting",
                "feSpotLight",
                "feTile",
                "feTurbulence",
                "filter",
                "foreignObject",
                "image",
                "mask",
                "pattern",
                "rect",
                "svg",
                "symbol",
                "text",
                "tspan",
                "use"
            ]
        },
        "xHeight": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The x-height attribute indicates the height of lowercase glyphs in the font within the font coordinate system.You can use this attribute with the following SVG elements:This value indicates the height of lowercase glyphs.BCD tables only load in the browser",
            "isRequired": false,
            "type": "number|string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/x-height",
            "elements": []
        },
        "x1": {
            "description": "The x1 attribute is used to specify the first x-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the x attribute instead.You can use this attribute with the following SVG elements:For <line>, x1 defines the x coordinate of the starting point of the line.For <linearGradient>, x1 defines the  x coordinate of the starting point of the gradient vector used to map the gradient stop values. The exact behavior of this attribute is influenced by the gradientUnits attributes",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/x1",
            "elements": [
                "line",
                "linearGradient"
            ]
        },
        "x2": {
            "description": "The x2 attribute is used to specify the second x-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the x attribute instead.You can use this attribute with the following SVG elements:For <line>, x2 defines the x coordinate of the ending point of the line.For <linearGradient>, x2 defines the  x coordinate of the ending point of the gradient vector used to map the gradient stop values. The exact behavior of this attribute is influenced by the gradientUnits attributes",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/x2",
            "elements": [
                "line",
                "linearGradient"
            ]
        },
        "xChannelSelector": {
            "description": "The xChannelSelector attribute indicates which color channel from in2 to use to displace the pixels in in along the x-axis.You can use this attribute with the following SVG elements:This keyword specifies that the red color channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the x-axis.This keyword specifies that the green color channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the x-axis.This keyword specifies that the blue color channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the x-axis.This keyword specifies that the alpha channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the x-axis.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xChannelSelector",
            "elements": [
                "feDisplacementMap"
            ]
        },
        "y": {
            "description": "The y attribute defines a y-axis coordinate in the user coordinate system.You can use this attribute with the following SVG elements:Warning: As of SVG2 <altGlyph> is deprecated and shouldn't be used.For <altGlyph>, y defines the y-axis coordinate of the alternate glyph.For <feBlend>, y defines the minimum y coordinate for the rendering area of the primitive.For <feColorMatrix>, y defines the minimum y coordinate for the rendering area of the primitive.For <feComponentTransfer>, y defines the minimum y coordinate for the rendering area of the primitive.For <feComposite>, y defines the minimum y coordinate for the rendering area of the primitive.For <feConvolveMatrix>, y defines the minimum y coordinate for the rendering area of the primitive.For <feDiffuseLighting>, y defines the minimum y coordinate for the rendering area of the primitive.For <feDisplacementMap>, y defines the minimum y coordinate for the rendering area of the primitive.For <feDropShadow>, y defines the minimum y coordinate for the rendering area of the primitive.For <feFlood>, y defines the minimum y coordinate for the rendering area of the primitive.For <feFuncA>, y defines the minimum y coordinate for the rendering area of the primitive.For <feFuncB>, y defines the minimum y coordinate for the rendering area of the primitive.For <feFuncG>, y defines the minimum y coordinate for the rendering area of the primitive.For <feFuncR>, y defines the minimum y coordinate for the rendering area of the primitive.For <feGaussianBlur>, y defines the minimum y coordinate for the rendering area of the primitive.For <feImage>, y defines the minimum y coordinate for the rendering area of the primitive.For <feMerge>, y defines the minimum y coordinate for the rendering area of the primitive.For <feMergeNode>, y defines the minimum y coordinate for the rendering area of the primitive.For <feMorphology>, y defines the minimum y coordinate for the rendering area of the primitive.For <feOffset>, y defines the minimum y coordinate for the rendering area of the primitive.For <fePointLight>, y defines the y location for the light source in the coordinate system defined by the primitiveUnits attribute on the <filter> element.For <feSpecularLighting>, y defines the minimum y coordinate for the rendering area of the primitive.For <feSpotLight>, y defines the y location for the light source in the coordinate system defined by the primitiveUnits attribute on the <filter> element.For <feTile>, y defines the minimum y coordinate for the rendering area of the primitive.For <feTurbulence>, y defines the minimum y coordinate for the rendering area of the primitive.For <filter>, y defines the y coordinate of the upper left corner for the rendering area of the filter.For <foreignObject>, y defines the y coordinate of the upper left corner of its viewport.Note: Starting with SVG2, y is a Geometry Property meaning this attribute can also be used as a CSS property for <foreignObject>.Warning: As of SVG2 <glyphRef> is deprecated and shouldn't be used.For <glyphRef>, y defines the y-axis coordinate of the glyph.For <image>, y defines the y coordinate of the upper left corner of the image.Note: Starting with SVG2, y is a Geometry Property meaning this attribute can also be used as a CSS property for images.For <mask>, y defines the y coordinate of the upper left corner of its area of effect. The exact effect of this attribute is influenced by the maskUnits attribute.For <pattern>, y defines the y coordinate of the upper left corner of the tile pattern. The exact effect of this attribute is influenced by the patternUnits and patternTransform attributes.For <rect>, y defines the y coordinate of the upper left corner of the shape.Note: Starting with SVG2, y is a Geometry Property meaning this attribute can also be used as a CSS property for rectangles.For <svg>, y defines the y coordinate of the upper left corner of its viewport.Note: Starting with SVG2, y is a Geometry Property meaning this attribute can also be used as a CSS property for <svg>.For <text>, if it contain a single value, y defines the y coordinate on where the content text position must be placed. The content text position is usually a point on the baseline of the first line of text. The exact content text position is influenced by some properties like text-anchor, or direction.If there are multiple values, y defines the y coordinate of each individual glyph from the text. If there are less values than glyphs, the remaining glyphs are placed in the continuity of the last positioned glyph. If there are more values than glyphs, extra values are ignored.Warning: As of SVG2 <tref> is deprecated and shouldn't be used.For <tref>, if it contain a single value, y defines the y coordinate on where the content text position must be placed. The content text position is usually a point on the baseline of the first line of text. The exact content text position is influenced by some properties like text-anchor, or direction.If there are multiple values, y defines the y coordinate of each individual glyph from the text. If there are less values than glyphs, the remaining glyphs are placed in the continuity of the last positioned glyph. If there are more values than glyphs, extra values are ignored.For <tspan>, if it contain a single value, y defines the y coordinate on where the content text position must be placed. The content text position is usually a point on the baseline of the first line of text. The exact content text position is influenced by some properties like text-anchor, or direction.If there are multiple values, y defines the y coordinate of each individual glyph from the text. If there are less values than glyphs, the remaining glyphs are placed in the continuity of the last positioned glyph. If there are more values than glyphs, extra values are ignored.For <use>, y defines the y coordinate of the upper left corner of the referenced element.Note: Starting with SVG2, y is a Geometry Property meaning this attribute can also be used as a CSS property for used elements.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/y",
            "elements": [
                "feBlend",
                "feColorMatrix",
                "feComponentTransfer",
                "feComposite",
                "feConvolveMatrix",
                "feDiffuseLighting",
                "feDisplacementMap",
                "feDropShadow",
                "feFlood",
                "feFuncA",
                "feFuncB",
                "feFuncG",
                "feFuncR",
                "feGaussianBlur",
                "feImage",
                "feMerge",
                "feMergeNode",
                "feMorphology",
                "feOffset",
                "fePointLight",
                "feSpecularLighting",
                "feSpotLight",
                "feTile",
                "feTurbulence",
                "filter",
                "foreignObject",
                "image",
                "mask",
                "pattern",
                "rect",
                "svg",
                "symbol",
                "text",
                "tspan",
                "use"
            ]
        },
        "y1": {
            "description": "The y1 attribute is used to specify the first y-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the y attribute instead.You can use this attribute with the following SVG elements:For <line>, y1 defines the y coordinate of the starting point of the line.For <linearGradient>, y1 defines the y coordinate of the starting point of the gradient vector used to map the gradient stop values. The exact behavior of this attribute is influenced by the gradientUnits attributes",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/y1",
            "elements": [
                "line",
                "linearGradient"
            ]
        },
        "y2": {
            "description": "The y2 attribute is used to specify the second y-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the y attribute instead.You can use this attribute with the following SVG elements:For <line>, y2 defines the y coordinate of the ending point of the line.For <linearGradient>, y2 defines the y coordinate of the ending point of the gradient vector used to map the gradient stop values. The exact behavior of this attribute is influenced by the gradientUnits attributes",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/y2",
            "elements": [
                "line",
                "linearGradient"
            ]
        },
        "yChannelSelector": {
            "description": "The yChannelSelector attribute indicates which color channel from in2 to use to displace the pixels in in along the y-axis.You can use this attribute with the following SVG elements:This keyword specifies that the red color channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the y-axis.This keyword specifies that the green color channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the y-axis.This keyword specifies that the blue color channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the y-axis.This keyword specifies that the alpha channel of the input image defined in in2 will be used to displace the pixels of the input image defined in in along the y-axis.BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/yChannelSelector",
            "elements": [
                "feDisplacementMap"
            ]
        },
        "z": {
            "description": "The z attribute defines the location along the z-axis for a light source in the coordinate system established by the primitiveUnits attribute on the <filter> element, assuming that, in the initial coordinate system, the positive z-axis comes out towards the person viewing the content and assuming that one unit along the z-axis equals one unit in x and y.You can use this attribute with the following SVG elements:For <fePointLight>, z defines the location along the z-axis for the light source in the coordinate system established by the primitiveUnits attribute on the <filter> element.For <feSpotLight>, z defines the location along the z-axis for the light source in the coordinate system established by the primitiveUnits attribute on the <filter> element.",
            "isRequired": false,
            "type": "number|string",
            "deprecated": false,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/z",
            "elements": [
                "fePointLight",
                "feSpotLight"
            ]
        },
        "zoomAndPan": {
            "description": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.The zoomAndPan attribute specifies whether the SVG document can be magnified and panned.Magnification in this context means the effect of a supplemental scale and translate transformation on the outermost SVG document fragment.Panning represents a translation (i.e., a shift) transformation on an SVG document fragment in response to a user interface action.You can use this attribute with the following SVG elements:BCD tables only load in the browser",
            "isRequired": false,
            "type": "string",
            "deprecated": true,
            "pageURL": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/zoomAndPan",
            "elements": [
                "svg",
                "view"
            ]
        }
    },
    "elements": {
        "animate": [
            "accumulate",
            "additive",
            "attributeName",
            "attributeType",
            "begin",
            "by",
            "calcMode",
            "colorInterpolation",
            "colorRendering",
            "dur",
            "end",
            "from",
            "keyPoints",
            "keySplines",
            "keyTimes",
            "repeatCount",
            "repeatDur",
            "requiredFeatures",
            "restart",
            "systemLanguage",
            "to",
            "values"
        ],
        "tspan": [
            "alignmentBaseline",
            "baselineShift",
            "colorInterpolation",
            "colorRendering",
            "direction",
            "dominantBaseline",
            "dx",
            "dy",
            "fill",
            "fillOpacity",
            "fillRule",
            "fontFamily",
            "fontSize",
            "fontSizeAdjust",
            "fontStretch",
            "fontStyle",
            "fontVariant",
            "fontWeight",
            "glyphOrientationHorizontal",
            "glyphOrientationVertical",
            "kerning",
            "lengthAdjust",
            "letterSpacing",
            "opacity",
            "paintOrder",
            "pointerEvents",
            "requiredFeatures",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinecap",
            "strokeLinejoin",
            "strokeMiterlimit",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "textAnchor",
            "textDecoration",
            "textLength",
            "unicodeBidi",
            "vectorEffect",
            "visibility",
            "wordSpacing",
            "writingMode",
            "x",
            "y"
        ],
        "textPath": [
            "alignmentBaseline",
            "baselineShift",
            "colorInterpolation",
            "colorRendering",
            "direction",
            "dominantBaseline",
            "fill",
            "fillOpacity",
            "fillRule",
            "fontFamily",
            "fontSize",
            "fontSizeAdjust",
            "fontStretch",
            "fontStyle",
            "fontVariant",
            "fontWeight",
            "glyphOrientationHorizontal",
            "glyphOrientationVertical",
            "kerning",
            "lengthAdjust",
            "letterSpacing",
            "opacity",
            "paintOrder",
            "pointerEvents",
            "requiredFeatures",
            "spacing",
            "startOffset",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinecap",
            "strokeLinejoin",
            "strokeMiterlimit",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "textAnchor",
            "textDecoration",
            "textLength",
            "unicodeBidi",
            "vectorEffect",
            "visibility",
            "wordSpacing",
            "writingMode"
        ],
        "feFuncA": [
            "amplitude",
            "exponent",
            "intercept",
            "tableValues",
            "x",
            "y"
        ],
        "feFuncB": [
            "amplitude",
            "exponent",
            "intercept",
            "tableValues",
            "x",
            "y"
        ],
        "feFuncG": [
            "amplitude",
            "exponent",
            "intercept",
            "tableValues",
            "x",
            "y"
        ],
        "feFuncR": [
            "amplitude",
            "exponent",
            "intercept",
            "tableValues",
            "x",
            "y"
        ],
        "feDistantLight": [
            "azimuth",
            "elevation"
        ],
        "feTurbulence": [
            "baseFrequency",
            "colorInterpolationFilters",
            "numOctaves",
            "result",
            "seed",
            "stitchTiles",
            "x",
            "y"
        ],
        "svg": [
            "baseProfile",
            "clip",
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "mask",
            "opacity",
            "overflow",
            "pointerEvents",
            "preserveAspectRatio",
            "requiredFeatures",
            "systemLanguage",
            "version",
            "viewBox",
            "x",
            "y",
            "zoomAndPan"
        ],
        "feConvolveMatrix": [
            "bias",
            "colorInterpolationFilters",
            "divisor",
            "edgeMode",
            "in",
            "kernelMatrix",
            "kernelUnitLength",
            "order",
            "preserveAlpha",
            "result",
            "targetX",
            "targetY",
            "x",
            "y"
        ],
        "symbol": [
            "clip",
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "mask",
            "opacity",
            "overflow",
            "pointerEvents",
            "preserveAspectRatio",
            "refX",
            "refY",
            "viewBox",
            "x",
            "y"
        ],
        "image": [
            "clip",
            "clipPath",
            "colorInterpolation",
            "colorProfile",
            "colorRendering",
            "imageRendering",
            "mask",
            "opacity",
            "overflow",
            "pointerEvents",
            "preserveAspectRatio",
            "requiredFeatures",
            "systemLanguage",
            "vectorEffect",
            "visibility",
            "x",
            "y"
        ],
        "foreignObject": [
            "clip",
            "colorInterpolation",
            "colorRendering",
            "opacity",
            "overflow",
            "pointerEvents",
            "requiredFeatures",
            "systemLanguage",
            "vectorEffect",
            "visibility",
            "x",
            "y"
        ],
        "pattern": [
            "clip",
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "mask",
            "overflow",
            "patternContentUnits",
            "patternTransform",
            "patternUnits",
            "pointerEvents",
            "preserveAspectRatio",
            "requiredFeatures",
            "systemLanguage",
            "viewBox",
            "x",
            "y"
        ],
        "marker": [
            "clip",
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "markerHeight",
            "markerUnits",
            "markerWidth",
            "mask",
            "opacity",
            "orient",
            "overflow",
            "pointerEvents",
            "preserveAspectRatio",
            "refX",
            "refY",
            "viewBox"
        ],
        "clipPath": [
            "clipPathUnits",
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "mask",
            "pointerEvents",
            "requiredFeatures",
            "systemLanguage"
        ],
        "circle": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "cx",
            "cy",
            "fill",
            "fillOpacity",
            "markerEnd",
            "markerMid",
            "markerStart",
            "mask",
            "opacity",
            "paintOrder",
            "pathLength",
            "pointerEvents",
            "r",
            "requiredFeatures",
            "shapeRendering",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "vectorEffect",
            "visibility"
        ],
        "ellipse": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "cx",
            "cy",
            "fill",
            "fillOpacity",
            "markerEnd",
            "markerMid",
            "markerStart",
            "mask",
            "opacity",
            "paintOrder",
            "pathLength",
            "pointerEvents",
            "requiredFeatures",
            "rx",
            "ry",
            "shapeRendering",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "vectorEffect",
            "visibility"
        ],
        "g": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "mask",
            "opacity",
            "pointerEvents",
            "requiredFeatures",
            "systemLanguage"
        ],
        "line": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "markerEnd",
            "markerMid",
            "markerStart",
            "mask",
            "opacity",
            "paintOrder",
            "pathLength",
            "pointerEvents",
            "requiredFeatures",
            "shapeRendering",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinecap",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "vectorEffect",
            "visibility",
            "x1",
            "x2",
            "y1",
            "y2"
        ],
        "mask": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "mask",
            "maskContentUnits",
            "maskUnits",
            "pointerEvents",
            "requiredFeatures",
            "systemLanguage",
            "x",
            "y"
        ],
        "path": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "d",
            "fill",
            "fillOpacity",
            "fillRule",
            "markerEnd",
            "markerMid",
            "markerStart",
            "mask",
            "opacity",
            "paintOrder",
            "pathLength",
            "pointerEvents",
            "requiredFeatures",
            "shapeRendering",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinecap",
            "strokeLinejoin",
            "strokeMiterlimit",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "vectorEffect",
            "visibility"
        ],
        "polygon": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "fill",
            "fillOpacity",
            "fillRule",
            "markerEnd",
            "markerMid",
            "markerStart",
            "mask",
            "opacity",
            "paintOrder",
            "pathLength",
            "pointerEvents",
            "points",
            "requiredFeatures",
            "shapeRendering",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinejoin",
            "strokeMiterlimit",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "vectorEffect",
            "visibility"
        ],
        "polyline": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "fill",
            "fillOpacity",
            "fillRule",
            "markerEnd",
            "markerMid",
            "markerStart",
            "mask",
            "opacity",
            "paintOrder",
            "pathLength",
            "pointerEvents",
            "points",
            "requiredFeatures",
            "shapeRendering",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinecap",
            "strokeLinejoin",
            "strokeMiterlimit",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "vectorEffect",
            "visibility"
        ],
        "rect": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "fill",
            "fillOpacity",
            "markerEnd",
            "markerMid",
            "markerStart",
            "mask",
            "opacity",
            "paintOrder",
            "pathLength",
            "pointerEvents",
            "requiredFeatures",
            "rx",
            "ry",
            "shapeRendering",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinejoin",
            "strokeMiterlimit",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "vectorEffect",
            "visibility",
            "x",
            "y"
        ],
        "text": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "direction",
            "dominantBaseline",
            "dx",
            "dy",
            "fill",
            "fillOpacity",
            "fillRule",
            "fontFamily",
            "fontSize",
            "fontSizeAdjust",
            "fontStretch",
            "fontStyle",
            "fontVariant",
            "fontWeight",
            "glyphOrientationHorizontal",
            "glyphOrientationVertical",
            "kerning",
            "lengthAdjust",
            "letterSpacing",
            "mask",
            "opacity",
            "overflow",
            "paintOrder",
            "pointerEvents",
            "requiredFeatures",
            "stroke",
            "strokeDasharray",
            "strokeDashoffset",
            "strokeLinecap",
            "strokeLinejoin",
            "strokeMiterlimit",
            "strokeOpacity",
            "strokeWidth",
            "systemLanguage",
            "textAnchor",
            "textDecoration",
            "textRendering",
            "textLength",
            "unicodeBidi",
            "vectorEffect",
            "visibility",
            "wordSpacing",
            "writingMode",
            "x",
            "y"
        ],
        "use": [
            "clipPath",
            "colorInterpolation",
            "colorRendering",
            "mask",
            "opacity",
            "pointerEvents",
            "requiredFeatures",
            "systemLanguage",
            "vectorEffect",
            "x",
            "y"
        ],
        "defs": [
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "pointerEvents",
            "requiredFeatures",
            "systemLanguage"
        ],
        "linearGradient": [
            "colorInterpolation",
            "colorRendering",
            "gradientTransform",
            "gradientUnits",
            "spreadMethod",
            "x1",
            "x2",
            "y1",
            "y2"
        ],
        "radialGradient": [
            "colorInterpolation",
            "colorRendering",
            "cx",
            "cy",
            "fx",
            "fy",
            "gradientTransform",
            "gradientUnits",
            "r",
            "spreadMethod"
        ],
        "switch": [
            "colorInterpolation",
            "colorRendering",
            "enableBackground",
            "opacity",
            "pointerEvents",
            "requiredFeatures",
            "systemLanguage"
        ],
        "feSpotLight": [
            "colorInterpolationFilters",
            "limitingConeAngle",
            "pointsAtX",
            "pointsAtY",
            "pointsAtZ",
            "specularExponent",
            "x",
            "y",
            "z"
        ],
        "feBlend": [
            "colorInterpolationFilters",
            "in",
            "in2",
            "mode",
            "result",
            "x",
            "y"
        ],
        "feColorMatrix": [
            "colorInterpolationFilters",
            "in",
            "result",
            "values",
            "x",
            "y"
        ],
        "feComponentTransfer": [
            "colorInterpolationFilters",
            "in",
            "result",
            "x",
            "y"
        ],
        "feComposite": [
            "colorInterpolationFilters",
            "in",
            "in2",
            "k1",
            "k2",
            "k3",
            "k4",
            "operator",
            "result",
            "x",
            "y"
        ],
        "feDiffuseLighting": [
            "colorInterpolationFilters",
            "diffuseConstant",
            "in",
            "kernelUnitLength",
            "lightingColor",
            "result",
            "surfaceScale",
            "x",
            "y"
        ],
        "feDisplacementMap": [
            "colorInterpolationFilters",
            "in",
            "in2",
            "result",
            "scale",
            "x",
            "xChannelSelector",
            "y",
            "yChannelSelector"
        ],
        "feDropShadow": [
            "colorInterpolationFilters",
            "dx",
            "dy",
            "floodColor",
            "floodOpacity",
            "in",
            "result",
            "x",
            "y"
        ],
        "feFlood": [
            "colorInterpolationFilters",
            "floodColor",
            "floodOpacity",
            "result",
            "x",
            "y"
        ],
        "feGaussianBlur": [
            "colorInterpolationFilters",
            "edgeMode",
            "in",
            "result",
            "stdDeviation",
            "x",
            "y"
        ],
        "feImage": [
            "colorInterpolationFilters",
            "preserveAspectRatio",
            "result",
            "x",
            "y"
        ],
        "feMerge": [
            "colorInterpolationFilters",
            "result",
            "x",
            "y"
        ],
        "feMorphology": [
            "colorInterpolationFilters",
            "in",
            "operator",
            "radius",
            "result",
            "x",
            "y"
        ],
        "feOffset": [
            "colorInterpolationFilters",
            "dx",
            "dy",
            "in",
            "result",
            "x",
            "y"
        ],
        "feSpecularLighting": [
            "colorInterpolationFilters",
            "in",
            "kernelUnitLength",
            "lightingColor",
            "result",
            "specularConstant",
            "specularExponent",
            "surfaceScale",
            "x",
            "y"
        ],
        "feTile": [
            "colorInterpolationFilters",
            "in",
            "result",
            "x",
            "y"
        ],
        "filter": [
            "filterRes",
            "filterUnits",
            "primitiveUnits",
            "x",
            "y"
        ],
        "feMergeNode": [
            "in",
            "x",
            "y"
        ],
        "view": [
            "preserveAspectRatio",
            "viewBox",
            "viewTarget",
            "zoomAndPan"
        ],
        "stop": [
            "stopColor",
            "stopOpacity"
        ],
        "fePointLight": [
            "x",
            "y",
            "z"
        ],
        "desc": [],
        "metadata": []
    }
}